(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_=>_i64 (func (param i32) (result i64)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 f64) (result i32)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $f64_=>_f64 (func (param f64) (result f64)))
 (import "env" "memory" (memory $0 1))
 (data (i32.const 1036) "(\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00(\00\00\00a\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00")
 (data (i32.const 1100) "\1e\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00p\00u\00r\00e\00.\00t\00s\00")
 (data (i32.const 1164) "\1e\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00")
 (data (i32.const 1228) "\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00DIDL")
 (data (i32.const 1260) "\10\00\00\00\01\00\00\00\00\00\00\00\03\00\00\00\10\00\00\00\e0\04\00\00\e0\04\00\00\04\00\00\00\04\00\00\00")
 (data (i32.const 1308) "\08\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00D\00I\00D\00L\00")
 (data (i32.const 1340) "F\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00F\00\00\00D\00F\00I\00N\00I\00T\00Y\00 \00V\00e\00c\00t\00o\00r\00s\00 \00e\00n\00c\00o\00d\00e\00 \00a\00n\00d\00 \00d\00e\00c\00o\00d\00i\00n\00g\00")
 (data (i32.const 1436) "P\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00P\00\00\00S\00h\00o\00u\00l\00d\00 \00d\00e\00c\00o\00d\00e\00 \00a\00n\00d\00 \00e\00n\00c\00o\00d\00e\00 \00a\00 \00v\00e\00c\00t\00o\00r\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 1548) "@\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00@\00\00\004\004\004\009\004\004\004\00c\000\001\006\00d\007\001\000\001\000\000\000\003\000\001\004\004\000\001\004\006\000\001\005\008\00")
 (data (i32.const 1644) "\1c\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 1692) "&\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00")
 (data (i32.const 1756) "\00\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 1788) "$\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00")
 (data (i32.const 1852) "$\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 1916) "\1c\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 1964) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1996) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2028) "\1a\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 2076) "\02\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00D\00")
 (data (i32.const 2108) "\02\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00F\00")
 (data (i32.const 2140) "\02\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00X\00")
 (data (i32.const 2172) "\0c\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\000\08\00\00P\08\00\00p\08\00\00")
 (data (i32.const 2204) "`\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00`\00\00\00S\00h\00o\00u\00l\00d\00 \00d\00e\00c\00o\00d\00e\00 \00t\00h\00e\00 \00A\00r\00r\00a\00y\00<\00s\00t\00r\00i\00n\00g\00>\00 \00t\00o\00 \00[\00\'\00D\00\'\00,\00\'\00F\00\'\00,\00\'\00X\00\'\00]\00")
 (data (i32.const 2332) "4\00\00\00\01\00\00\00\00\00\00\00\01\00\00\004\00\00\00c\00a\00c\00h\00e\00L\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00v\00e\00n\00")
 (data (i32.const 2412) "t\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00t\00\00\00n\00o\00d\00e\00_\00m\00o\00d\00u\00l\00e\00s\00/\00@\00a\00s\00-\00p\00e\00c\00t\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00a\00s\00s\00e\00r\00t\00.\00t\00s\00")
 (data (i32.const 2556) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2588) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2620) "2\00\00\00\01\00\00\00\00\00\00\00\01\00\00\002\00\00\00A\00r\00r\00a\00y\00<\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00/\00S\00t\00r\00i\00n\00g\00>\00")
 (data (i32.const 2700) "$\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00")
 (data (i32.const 2764) "\16\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00")
 (data (i32.const 2812) "\0c\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g\00")
 (data (i32.const 2844) "^\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00")
 (data (i32.const 2972) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3004) "d\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00")
 (data (i32.const 3132) "&\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00")
 (data (i32.const 3196) "\02\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\02\00\00\000\00")
 (data (i32.const 3228) "H\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00")
 (data (i32.const 3324) "0\03\00\00\01\00\00\00\00\00\00\00\1b\00\00\000\03\00\00\df\00S\00S\00\00\00I\01\bc\02N\00\00\00\f0\01J\00\0c\03\00\00\90\03\99\03\08\03\01\03\b0\03\a5\03\08\03\01\03\87\055\05R\05\00\00\96\1eH\001\03\00\00\97\1eT\00\08\03\00\00\98\1eW\00\n\03\00\00\99\1eY\00\n\03\00\00\9a\1eA\00\be\02\00\00P\1f\a5\03\13\03\00\00R\1f\a5\03\13\03\00\03T\1f\a5\03\13\03\01\03V\1f\a5\03\13\03B\03\80\1f\08\1f\99\03\00\00\81\1f\t\1f\99\03\00\00\82\1f\n\1f\99\03\00\00\83\1f\0b\1f\99\03\00\00\84\1f\0c\1f\99\03\00\00\85\1f\0d\1f\99\03\00\00\86\1f\0e\1f\99\03\00\00\87\1f\0f\1f\99\03\00\00\88\1f\08\1f\99\03\00\00\89\1f\t\1f\99\03\00\00\8a\1f\n\1f\99\03\00\00\8b\1f\0b\1f\99\03\00\00\8c\1f\0c\1f\99\03\00\00\8d\1f\0d\1f\99\03\00\00\8e\1f\0e\1f\99\03\00\00\8f\1f\0f\1f\99\03\00\00\90\1f(\1f\99\03\00\00\91\1f)\1f\99\03\00\00\92\1f*\1f\99\03\00\00\93\1f+\1f\99\03\00\00\94\1f,\1f\99\03\00\00\95\1f-\1f\99\03\00\00\96\1f.\1f\99\03\00\00\97\1f/\1f\99\03\00\00\98\1f(\1f\99\03\00\00\99\1f)\1f\99\03\00\00\9a\1f*\1f\99\03\00\00\9b\1f+\1f\99\03\00\00\9c\1f,\1f\99\03\00\00\9d\1f-\1f\99\03\00\00\9e\1f.\1f\99\03\00\00\9f\1f/\1f\99\03\00\00\a0\1fh\1f\99\03\00\00\a1\1fi\1f\99\03\00\00\a2\1fj\1f\99\03\00\00\a3\1fk\1f\99\03\00\00\a4\1fl\1f\99\03\00\00\a5\1fm\1f\99\03\00\00\a6\1fn\1f\99\03\00\00\a7\1fo\1f\99\03\00\00\a8\1fh\1f\99\03\00\00\a9\1fi\1f\99\03\00\00\aa\1fj\1f\99\03\00\00\ab\1fk\1f\99\03\00\00\ac\1fl\1f\99\03\00\00\ad\1fm\1f\99\03\00\00\ae\1fn\1f\99\03\00\00\af\1fo\1f\99\03\00\00\b2\1f\ba\1f\99\03\00\00\b3\1f\91\03\99\03\00\00\b4\1f\86\03\99\03\00\00\b6\1f\91\03B\03\00\00\b7\1f\91\03B\03\99\03\bc\1f\91\03\99\03\00\00\c2\1f\ca\1f\99\03\00\00\c3\1f\97\03\99\03\00\00\c4\1f\89\03\99\03\00\00\c6\1f\97\03B\03\00\00\c7\1f\97\03B\03\99\03\cc\1f\97\03\99\03\00\00\d2\1f\99\03\08\03\00\03\d3\1f\99\03\08\03\01\03\d6\1f\99\03B\03\00\00\d7\1f\99\03\08\03B\03\e2\1f\a5\03\08\03\00\03\e3\1f\a5\03\08\03\01\03\e4\1f\a1\03\13\03\00\00\e6\1f\a5\03B\03\00\00\e7\1f\a5\03\08\03B\03\f2\1f\fa\1f\99\03\00\00\f3\1f\a9\03\99\03\00\00\f4\1f\8f\03\99\03\00\00\f6\1f\a9\03B\03\00\00\f7\1f\a9\03B\03\99\03\fc\1f\a9\03\99\03\00\00\00\fbF\00F\00\00\00\01\fbF\00I\00\00\00\02\fbF\00L\00\00\00\03\fbF\00F\00I\00\04\fbF\00F\00L\00\05\fbS\00T\00\00\00\06\fbS\00T\00\00\00\13\fbD\05F\05\00\00\14\fbD\055\05\00\00\15\fbD\05;\05\00\00\16\fbN\05F\05\00\00\17\fbD\05=\05\00\00")
 (data (i32.const 4160) "\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\0d\06\06\0e\06\06\06\06\06\06\06\06\0fa\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1ey1P1P18P1P1P1P1P1P1P1PN1\02N\0d\0dN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\0d1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0cl\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\0d\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00N1P1P1P1P1P1P1P\0d\00\00\00\00\00$P1P1P1P1P\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03x8+++++++++++++O-++\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\00\00*++++++++++++++++++++++++++\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00++++++++\07\00HVVVVVVVV\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++++UVVVVVVVVVVVV\0ee\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00*++++++++++VVVVVVVVVV\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++UVVVVVVVVVV\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6828) "\00\08\00\00V\01\00\009\00\00\00")
 (data (i32.const 6840) "\00\00\00\00\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data (i32.const 7800) "\00\06\'Qow\00\00\00\00\00\00\00\00\00\00|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa\00\00\00\00\00\00\00\00\00\00\b4\c4\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c6\c9\00\00\00\db\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4\00\00\00\00\00\00\00\00\00\00\00\e7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ea\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ed\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8312) "0\0c1\0dx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data (i32.const 8716) "\08\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00n\00u\00l\00l\00")
 (data (i32.const 8744) "\12\10\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1fff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80@\00\04\00\00\00@\01\00\00\00\00\00\00\00\00\a1\90\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff0\04\b0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\82\00\00\00\00\00\00\fe\ff\ff\ff\ff\bf\b6\00\00\00\00\00\10\00?\00\ff\17\00\00\00\00\01\f8\ff\ff\00\00\01\00\00\00\00\00\00\00\00\00\00\00\c0\bf\ff=\00\00\00\80\02\00\00\00\ff\ff\ff\07\00\00\00\00\00\00\00\00\00\00\c0\ff\01\00\00\00\00\00\00\f8?$\00\00\c0\ff\ff?\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\14\fe!\fe\00\0c\00\02\00\02\00\00\00\00\00\00\10\1e \00\00\0c\00\00@\06\00\00\00\00\00\00\10\869\02\00\00\00#\00\06\00\00\00\00\00\00\10\be!\00\00\0c\00\00\fc\02\00\00\00\00\00\00\90\1e `\00\0c\00\00\00\04\00\00\00\00\00\00\00\01 \00\00\00\00\00\00\11\00\00\00\00\00\00\c0\c1=`\00\0c\00\00\00\02\00\00\00\00\00\00\90@0\00\00\0c\00\00\00\03\00\00\00\00\00\00\18\1e \00\00\0c\00\00\00\02\00\00\00\00\00\00\00\00\04\\\00\00\00\00\00\00\00\00\00\00\00\f2\07\c0\7f\00\00\00\00\00\00\00\00\00\00\00\00\f2\1f@?\00\00\00\00\00\00\00\00\00\03\00\00\a0\02\00\00\00\00\00\00\fe\7f\df\e0\ff\fe\ff\ff\ff\1f@\00\00\00\00\00\00\00\00\00\00\00\00\e0\fdf\00\00\00\c3\01\00\1e\00d \00 \00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\e0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\1c\00\00\00\0c\00\00\00\0c\00\00\00\00\00\00\00\b0?@\fe\8f \00\00\00\00\00x\00\00\00\00\00\00\08\00\00\00\00\00\00\00`\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\87\01\04\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\t\00\00\00\00\00\00@\7f\e5\1f\f8\9f\00\00\00\00\80\00\ff\ff\01\00\00\00\00\00\00\00\0f\00\00\00\00\00\d0\17\04\00\00\00\00\f8\0f\00\03\00\00\00<;\00\00\00\00\00\00@\a3\03\00\00\00\00\00\00\f0\cf\00\00\00\00\00\00\00\00?\00\00\00\00\00\00\00\00\00\00\f7\ff\fd!\10\03\00\00\00\00\00\f0\ff\ff\ff\ff\ff\ff\ff\07\00\01\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\a0\03\e0\00\e0\00\e0\00`\00\f8\00\03\90|\00\00\00\00\00\00\df\ff\02\80\00\00\ff\1f\00\00\00\00\00\00\ff\ff\ff\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\00\00\00\00\00\00\00\00\00\00\00\00\00\80\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\80\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\00\00\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00<>\08\00\00\00\00\00\00\00\00\00\00\00~\00\00\00\00\00\00\00\00\00\00\00p\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00?\00\10\00\00\00\00\00\00\00\00\00\00\00\80\f7\bf\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\03\00\ff\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\01\00\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00\03D\08\00\00`\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\00\00\00\ff\ff\03\80\00\00\00\00\c0?\00\00\80\ff\03\00\00\00\00\00\07\00\00\00\00\00\c83\00\80\00\00`\00\00\00\00\00\00\00\00~f\00\08\10\00\00\00\00\01\10\00\00\00\00\00\00\9d\c1\02\00\00 \000X\00\00\00\00\00\00\00\00\00\00\00\00\f8\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00 !\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fc\ff\03\00\00\00\00\00\00\00\ff\ff\08\00\ff\ff\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\80@\00\04\00\00\00@\01\00\00\00\00\00\01\00\00\00\00\c0\00\00\00\00\00\00\00\00\08\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00n\f0\00\00\00\00\00\87\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\ff\7f\00\00\00\00\00\00\80\03\00\00\00\00\00x&\00 \00\00\00\00\00\00\07\00\00\00\80\ef\1f\00\00\00\00\00\00\00\08\00\03\00\00\00\00\00\c0\7f\00\9e\00\00\00\00\00\00\00\00\00\00\00\80\d3@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\f8\07\00\00\03\00\00\00\00\00\00\18\01\00\00\00\c0\1f\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\\\00\00@\00\00\00\00\00\00\00\00\00\00\f8\85\0d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00<\b0\01\00\000\00\00\00\00\00\00\00\00\00\00\f8\a7\01\00\00\00\00\00\00\00\00\00\00\00\00(\bf\00\00\00\00\00\00\00\00\00\00\00\00\e0\bc\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\ff\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\0c\01\00\00\00\fe\07\00\00\00\00\f8y\80\00~\0e\00\00\00\00\00\fc\7f\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7f\bf\00\00\00\00\00\00\00\00\00\00\fc\ff\ff\fcm\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00~\b4\bf\00\00\00\00\00\00\00\00\00\a3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\00\00\00\00\7f\00\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\80\ff\ff\00\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\03\f8\ff\e7\0f\00\00\00<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\7f\f8\ff\ff\ff\ff\ff\1f \00\10\00\00\f8\fe\ff\00\00\00\00\00\00\00\00\00\00\7f\ff\ff\f9\db\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8")
 (data (i32.const 11752) "\12\13\14\15\16\17\10\10\10\10\10\10\10\10\10\10\18\10\10\19\10\10\10\10\10\10\10\10\1a\1b\11\1c\1d\1e\10\10\1f\10\10\10\10\10\10\10 !\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\"#\10\10\10$\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10%\10\10\10&\10\10\10\10\'\10\10\10\10\10\10\10(\10\10\10\10\10\10\10\10\10\10\10)\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10*\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10+,-.\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10/\10\10\10\10\10\10\100\10\10\10\10\10\10\10\10\10\10\10\10\10\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\f0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\ff\ff\ff\01\03\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\cf\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\00\ff\ff\ff\ff\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\01\ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\80\00\00\ff\1f\00\00\00\00\00\00\00\00\00\00\00\00\84\fc/>P\bd\1f\f2\e0C\00\00\ff\ff\ff\ff\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff?\00\00\ff\ff\ff?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffx\ff\ff\ff\ff\ff\ff\fc\07\00\00\00\00`\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\f7\ff\01\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\7f\00\f8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\0f\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13324) "l\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00l\00\00\00S\00h\00o\00u\00l\00d\00 \00e\00n\00c\00o\00d\00e\00 \00t\00h\00e\00 \00A\00r\00r\00a\00y\00<\00s\00t\00r\00i\00n\00g\00>\00 \00t\00o\00 \00t\00h\00e\00 \00s\00a\00m\00e\00 \00U\00i\00n\00t\008\00A\00r\00r\00a\00y\00")
 (data (i32.const 13452) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13484) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13516) "2\00\00\00\01\00\00\00\00\00\00\00\01\00\00\002\00\00\00S\00e\00r\00i\00a\00l\00i\00z\00e\00s\00 \00t\00o\00 \00s\00a\00m\00e\00 \00v\00a\00l\00u\00e\00.\00")
 (data (i32.const 13596) "\08\00\00\00\01\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 13628) "L\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00L\00\00\00S\00h\00o\00u\00l\00d\00 \00d\00e\00c\00o\00d\00e\00 \00a\00n\00d\00 \00e\00n\00c\00o\00d\00e\00 \00a\00 \00v\00e\00c\00t\00o\00r\00 \00b\00o\00o\00l\00")
 (data (i32.const 13724) "<\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00<\00\00\004\004\004\009\004\004\004\00c\000\001\006\00d\007\00e\000\001\000\000\000\005\000\001\000\000\000\001\000\000\000\001\00")
 (data (i32.const 13804) "\05\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\00\01\00\01")
 (data (i32.const 13836) "\80\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\80\00\00\00S\00h\00o\00u\00l\00d\00 \00d\00e\00c\00o\00d\00e\00 \00t\00h\00e\00 \00A\00r\00r\00a\00y\00<\00b\00o\00o\00l\00e\00a\00n\00>\00 \00t\00o\00 \00[\00t\00r\00u\00e\00,\00f\00a\00l\00s\00e\00,\00t\00r\00u\00e\00,\00f\00a\00l\00s\00e\00,\00t\00r\00u\00e\00]\00")
 (data (i32.const 13996) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14028) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14060) "\16\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00A\00r\00r\00a\00y\00<\00b\00o\00o\00l\00>\00")
 (data (i32.const 14108) "\08\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00b\00o\00o\00l\00")
 (data (i32.const 14140) "n\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00n\00\00\00S\00h\00o\00u\00l\00d\00 \00e\00n\00c\00o\00d\00e\00 \00t\00h\00e\00 \00A\00r\00r\00a\00y\00<\00b\00o\00o\00l\00e\00a\00n\00>\00 \00t\00o\00 \00t\00h\00e\00 \00s\00a\00m\00e\00 \00U\00i\00n\00t\008\00A\00r\00r\00a\00y\00")
 (data (i32.const 14284) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14316) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14348) "\14\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00U\00i\00n\00t\008\00A\00r\00r\00a\00y\00")
 (data (i32.const 14396) "\04\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00u\008\00")
 (data (i32.const 14428) "\08\00\00\00\01\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 14460) "H\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00H\00\00\00S\00h\00o\00u\00l\00d\00 \00d\00e\00c\00o\00d\00e\00 \00a\00n\00d\00 \00e\00n\00c\00o\00d\00e\00 \00a\00 \00v\00e\00c\00t\00o\00r\00 \00u\008\00")
 (data (i32.const 14556) "L\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00L\00\00\004\004\004\009\004\004\004\00c\000\001\006\00d\007\00b\000\001\000\000\000\009\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\00")
 (data (i32.const 14652) "\t\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\t\00\00\00\01\02\03\04\05\06\07\08\t")
 (data (i32.const 14684) "\1e\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00N\00o\00t\00 \00I\00m\00p\00l\00e\00m\00e\00n\00t\00e\00d\00")
 (data (i32.const 14748) "@\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00@\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00l\00i\00b\00/\00c\00a\00n\00d\00i\00d\00/\00i\00d\00l\00/\00t\00y\00p\00e\00s\00.\00t\00s\00")
 (data (i32.const 14844) "d\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00d\00\00\00S\00h\00o\00u\00l\00d\00 \00d\00e\00c\00o\00d\00e\00 \00t\00h\00e\00 \00A\00r\00r\00a\00y\00<\00u\008\00>\00 \00t\00o\00 \00[\001\00,\002\00,\003\00,\004\00,\005\00,\006\00,\007\00,\008\00,\009\00]\00")
 (data (i32.const 14972) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15004) "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15036) "\12\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00A\00r\00r\00a\00y\00<\00u\008\00>\00")
 (data (i32.const 15084) "d\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00d\00\00\00S\00h\00o\00u\00l\00d\00 \00e\00n\00c\00o\00d\00e\00 \00t\00h\00e\00 \00A\00r\00r\00a\00y\00<\00u\008\00>\00 \00t\00o\00 \00t\00h\00e\00 \00s\00a\00m\00e\00 \00U\00i\00n\00t\008\00A\00r\00r\00a\00y\00")
 (data (i32.const 15212) "\08\00\00\00\01\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00")
 (data (i32.const 15244) "\08\00\00\00\01\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00")
 (data (i32.const 15276) "\08\00\00\00\01\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00")
 (data (i32.const 15308) "\08\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00v\00e\00c\00 \00")
 (data (i32.const 15340) "\08\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00t\00e\00x\00t\00")
 (data (i32.const 15372) "\06\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00n\00a\00t\00")
 (data (i32.const 15404) "\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00m")
 (data (i32.const 15440) "$\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00b\00\00\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\000A\02\00\00\00\00\00a\00\00\00\02\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\"\01\00\00\00\00\00\00\"\t\00\00\00\00\00\00\"A\00\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00\0f\00\00\00 \00\00\00\10\00\00\00 \00\00\00\00\00\00\000\t\02\00\00\00\00\00 \00\00\00\00\00\00\00\"A\00\00\00\00\00\00a\00\00\00\02\00\00\00 \00\00\00\16\00\00\00 \00\00\00\10\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\000\t\82\00\00\00\00\00\"A\00\00\00\00\00\00\a4\00\00\00\00\00\00\00 \00\00\00\00\00\00\00b\00\00\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00\0f\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00\0f\00\00\00!\02\00\00\02\00\00\00")
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "__aspect" "createReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (import "__aspect" "pushReflectedObjectValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue (param i32 i32)))
 (import "__aspect" "attachStackTraceToReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue (param i32)))
 (import "__aspect" "reportActualReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue (param i32)))
 (import "__aspect" "reportExpectedReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue (param i32 i32)))
 (import "__aspect" "clearActual" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual))
 (import "__aspect" "clearExpected" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected))
 (import "__aspect" "reportTestTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/it (param i32 i32)))
 (import "__aspect" "createReflectedNumber" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber (param i32 i32 i32 i32 f64) (result i32)))
 (import "__aspect" "reportGroupTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/describe (param i32 i32)))
 (table $0 6 funcref)
 (elem (i32.const 1) $start:assembly/lib/__tests__/vectors.spec~anonymous|0~anonymous|0 $start:assembly/lib/__tests__/vectors.spec~anonymous|0~anonymous|1 $start:assembly/lib/__tests__/vectors.spec~anonymous|0~anonymous|2 $start:assembly/lib/__tests__/vectors.spec~anonymous|0 $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0)
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $assembly/lib/candid/recordRegistry/RecordRegistery.instance (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~started (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 15440))
 (export "_start" (func $~start))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "__new" (func $~lib/rt/pure/__new))
 (export "__renew" (func $~lib/rt/pure/__renew))
 (export "__retain" (func $~lib/rt/pure/__retain))
 (export "__release" (func $~lib/rt/pure/__release))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "__call" (func $node_modules/@as-pect/assembly/assembly/internal/call/__call))
 (export "__ignoreLogs" (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs))
 (export "__disableRTrace" (func $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0))
 (export "__getUsizeArrayId" (func $node_modules/@as-pect/assembly/assembly/internal/RTrace/__getUsizeArrayId))
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 272
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 1073741820
  i32.lt_u
  i32.const 0
  local.get $2
  i32.const 12
  i32.ge_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 274
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if
   local.get $2
   i32.const 4
   i32.shr_u
   local.set $2
  else
   local.get $2
   i32.const 31
   local.get $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $2
   local.get $3
   i32.const 7
   i32.sub
   local.set $3
  end
  local.get $2
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $3
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 287
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $4
  local.get $1
  i32.load offset=4
  local.tee $5
  if
   local.get $5
   local.get $4
   i32.store offset=8
  end
  local.get $4
  if
   local.get $4
   local.get $5
   i32.store offset=4
  end
  local.get $1
  local.get $0
  local.get $2
  local.get $3
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.get $2
   local.get $3
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $4
   i32.store offset=96
   local.get $4
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $4
    i32.load offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $1
    local.get $4
    local.get $1
    i32.store offset=4
    local.get $1
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 200
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $4
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 202
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $5
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $4
   i32.const -4
   i32.and
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.const 1073741820
   i32.lt_u
   if
    local.get $0
    local.get $5
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $3
    local.get $4
    i32.const 3
    i32.and
    i32.or
    local.tee $4
    i32.store
    local.get $1
    i32.const 4
    i32.add
    local.get $1
    i32.load
    i32.const -4
    i32.and
    i32.add
    local.tee $5
    i32.load
    local.set $2
   end
  end
  local.get $4
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $3
   i32.load
   local.tee $7
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1184
    i32.const 223
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $7
   i32.const -4
   i32.and
   i32.const 4
   i32.add
   local.get $4
   i32.const -4
   i32.and
   i32.add
   local.tee $8
   i32.const 1073741820
   i32.lt_u
   if (result i32)
    local.get $0
    local.get $3
    call $~lib/rt/tlsf/removeBlock
    local.get $3
    local.get $8
    local.get $7
    i32.const 3
    i32.and
    i32.or
    local.tee $4
    i32.store
    local.get $3
   else
    local.get $1
   end
   local.set $1
  end
  local.get $5
  local.get $2
  i32.const 2
  i32.or
  i32.store
  local.get $4
  i32.const -4
  i32.and
  local.tee $3
  i32.const 1073741820
  i32.lt_u
  i32.const 0
  local.get $3
  i32.const 12
  i32.ge_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 238
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.get $1
  i32.const 4
  i32.add
  i32.add
  local.get $5
  i32.ne
  if
   i32.const 0
   i32.const 1184
   i32.const 239
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $3
  i32.const 256
  i32.lt_u
  if
   local.get $3
   i32.const 4
   i32.shr_u
   local.set $3
  else
   local.get $3
   i32.const 31
   local.get $3
   i32.clz
   i32.sub
   local.tee $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $3
   local.get $4
   i32.const 7
   i32.sub
   local.set $6
  end
  local.get $3
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $6
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 255
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $3
  local.get $6
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $4
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $4
  i32.store offset=8
  local.get $4
  if
   local.get $4
   local.get $1
   i32.store offset=4
  end
  local.get $0
  local.get $3
  local.get $6
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $6
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $6
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $3
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 1184
   i32.const 380
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $2
  i32.const -16
  i32.and
  local.get $0
  i32.load offset=1568
  local.tee $2
  if
   local.get $1
   local.get $2
   i32.const 4
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1184
    i32.const 387
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $1
   i32.const 16
   i32.sub
   i32.eq
   if
    local.get $2
    i32.load
    local.set $4
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1184
    i32.const 400
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $4
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 4
  i32.add
  i32.add
  local.tee $2
  i32.const 2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size
  local.tee $0
  i32.const 1
  i32.lt_s
  if (result i32)
   i32.const 1
   local.get $0
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 15744
  i32.const 0
  i32.store
  i32.const 17312
  i32.const 0
  i32.store
  loop $for-loop|0
   local.get $1
   i32.const 23
   i32.lt_u
   if
    local.get $1
    i32.const 2
    i32.shl
    i32.const 15744
    i32.add
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $0
    loop $for-loop|1
     local.get $0
     i32.const 16
     i32.lt_u
     if
      local.get $0
      local.get $1
      i32.const 4
      i32.shl
      i32.add
      i32.const 2
      i32.shl
      i32.const 15744
      i32.add
      i32.const 0
      i32.store offset=96
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|1
     end
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  i32.const 15744
  i32.const 17316
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 15744
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/prepareSize (param $0 i32) (result i32)
  local.get $0
  i32.const 1073741820
  i32.ge_u
  if
   i32.const 1056
   i32.const 1184
   i32.const 461
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12
  local.get $0
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $0
  i32.const 12
  i32.le_u
  select
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $1
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.set $2
   local.get $1
   local.get $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $1
   local.get $2
   i32.const 7
   i32.sub
   local.set $2
  end
  local.get $1
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $2
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 333
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1184
     i32.const 346
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/prepareBlock (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.load
  local.set $3
  local.get $2
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1184
   i32.const 360
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.get $2
  i32.sub
  local.tee $4
  i32.const 16
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $2
   local.get $1
   i32.const 4
   i32.add
   i32.add
   local.tee $1
   local.get $4
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const -2
   i32.and
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.tee $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.get $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/prepareSize
  local.tee $2
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   i32.const 4
   memory.size
   local.tee $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   local.get $0
   i32.load offset=1568
   i32.ne
   i32.shl
   local.get $2
   i32.const 1
   i32.const 27
   local.get $2
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $2
   local.get $2
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.set $3
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1184
    i32.const 498
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 1184
   i32.const 500
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $0
  local.get $1
  local.get $2
  call $~lib/rt/tlsf/prepareBlock
  local.get $1
 )
 (func $~lib/rt/pure/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1056
   i32.const 1120
   i32.const 275
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.add
  local.set $2
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $2
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.tee $3
  i32.const 4
  i32.sub
  local.tee $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  local.get $3
  i32.const 16
  i32.add
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 15
  i32.and
  i32.eqz
  i32.const 0
  local.get $0
  select
  if (result i32)
   local.get $1
   i32.load
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1184
   i32.const 563
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
 )
 (func $~lib/memory/memory.copy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $2
   local.set $4
   local.get $0
   local.get $1
   i32.eq
   br_if $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.get $1
   i32.lt_u
   if
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $0
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       local.get $0
       local.tee $2
       i32.const 1
       i32.add
       local.set $0
       local.get $1
       local.tee $3
       i32.const 1
       i32.add
       local.set $1
       local.get $2
       local.get $3
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $0
       local.get $1
       i64.load
       i64.store
       local.get $4
       i32.const 8
       i32.sub
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $4
     if
      local.get $0
      local.tee $2
      i32.const 1
      i32.add
      local.set $0
      local.get $1
      local.tee $3
      i32.const 1
      i32.add
      local.set $1
      local.get $2
      local.get $3
      i32.load8_u
      i32.store8
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $while-continue|2
     end
    end
   else
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $0
      local.get $4
      i32.add
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $4
       i32.const 8
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $4
     if
      local.get $4
      i32.const 1
      i32.sub
      local.tee $4
      local.get $0
      i32.add
      local.get $1
      local.get $4
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/rt/tlsf/freeBlock (param $0 i32) (param $1 i32)
  local.get $1
  local.get $1
  i32.load
  i32.const 1
  i32.or
  i32.store
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/moveBlock (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  local.get $2
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  i32.const 4
  i32.add
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  call $~lib/memory/memory.copy
  local.get $1
  i32.const 15732
  i32.ge_u
  if
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/freeBlock
  end
  local.get $2
 )
 (func $~lib/rt/pure/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1056
   i32.const 1120
   i32.const 288
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.sub
  local.set $0
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  local.get $1
  i32.const 16
  i32.add
  local.set $2
  local.get $0
  i32.const 15732
  i32.lt_u
  if
   global.get $~lib/rt/tlsf/ROOT
   local.get $0
   call $~lib/rt/tlsf/checkUsedBlock
   local.get $2
   call $~lib/rt/tlsf/moveBlock
   local.set $0
  else
   block $__inlined_func$~lib/rt/tlsf/reallocateBlock
    global.get $~lib/rt/tlsf/ROOT
    local.set $3
    local.get $0
    call $~lib/rt/tlsf/checkUsedBlock
    local.set $0
    block $folding-inner0
     local.get $2
     call $~lib/rt/tlsf/prepareSize
     local.tee $5
     local.get $0
     i32.load
     local.tee $6
     i32.const -4
     i32.and
     local.tee $4
     i32.le_u
     br_if $folding-inner0
     local.get $0
     i32.const 4
     i32.add
     local.get $0
     i32.load
     i32.const -4
     i32.and
     i32.add
     local.tee $7
     i32.load
     local.tee $8
     i32.const 1
     i32.and
     if
      local.get $5
      local.get $4
      i32.const 4
      i32.add
      local.get $8
      i32.const -4
      i32.and
      i32.add
      local.tee $4
      i32.le_u
      if
       local.get $3
       local.get $7
       call $~lib/rt/tlsf/removeBlock
       local.get $0
       local.get $4
       local.get $6
       i32.const 3
       i32.and
       i32.or
       i32.store
       br $folding-inner0
      end
     end
     local.get $3
     local.get $0
     local.get $2
     call $~lib/rt/tlsf/moveBlock
     local.set $0
     br $__inlined_func$~lib/rt/tlsf/reallocateBlock
    end
    local.get $3
    local.get $0
    local.get $5
    call $~lib/rt/tlsf/prepareBlock
   end
  end
  local.get $0
  i32.const 4
  i32.add
  local.tee $0
  i32.const 4
  i32.sub
  local.get $1
  i32.store offset=16
  local.get $0
  i32.const 16
  i32.add
 )
 (func $~lib/rt/pure/__retain (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 15732
  i32.gt_u
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $1
   i32.load offset=4
   local.tee $2
   i32.const -268435456
   i32.and
   local.get $2
   i32.const 1
   i32.add
   i32.const -268435456
   i32.and
   i32.ne
   if
    i32.const 0
    i32.const 1120
    i32.const 109
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $1
   i32.load
   i32.const 1
   i32.and
   if
    i32.const 0
    i32.const 1120
    i32.const 112
    i32.const 14
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
 )
 (func $~lib/rt/pure/__release (param $0 i32)
  local.get $0
  i32.const 15732
  i32.gt_u
  if
   local.get $0
   i32.const 20
   i32.sub
   call $~lib/rt/pure/decrement
  end
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $~lib/util/memory/memset|inlined.0
   local.get $1
   i32.eqz
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8
   local.get $0
   local.get $1
   i32.add
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 0
   i32.store8 offset=3
   local.get $1
   i32.const 2
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=1
   local.get $0
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 0
   i32.store8 offset=1
   local.get $1
   i32.const 6
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=3
   local.get $2
   i32.const 0
   i32.store8
   local.get $1
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   local.get $0
   i32.sub
   i32.const 3
   i32.and
   local.tee $2
   i32.add
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   local.get $1
   local.get $2
   i32.sub
   i32.const -4
   i32.and
   local.tee $2
   i32.add
   i32.const 28
   i32.sub
   local.tee $1
   i32.const 0
   i32.store offset=24
   local.get $2
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.store offset=16
   local.get $1
   i32.const 0
   i32.store offset=20
   local.get $2
   i32.const 24
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.store offset=24
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.const 4
   i32.and
   i32.const 24
   i32.add
   local.tee $1
   i32.add
   local.set $0
   local.get $2
   local.get $1
   i32.sub
   local.set $1
   loop $while-continue|0
    local.get $1
    i32.const 32
    i32.ge_u
    if
     local.get $0
     i64.const 0
     i64.store
     local.get $0
     i64.const 0
     i64.store offset=8
     local.get $0
     i64.const 0
     i64.store offset=16
     local.get $0
     i64.const 0
     i64.store offset=24
     local.get $1
     i32.const 32
     i32.sub
     local.set $1
     local.get $0
     i32.const 32
     i32.add
     local.set $0
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 2
   call $~lib/rt/pure/__new
   call $~lib/rt/pure/__retain
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1664
   i32.const 1712
   i32.const 18
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  i32.shl
  local.tee $3
  i32.const 0
  call $~lib/rt/pure/__new
  local.tee $1
  local.get $3
  call $~lib/memory/memory.fill
  local.get $1
  local.set $2
  local.get $1
  local.get $0
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $2
   call $~lib/rt/pure/__retain
   local.set $2
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $0
  local.get $2
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $3
  i32.store offset=8
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $0 i32) (result i32)
  i32.const 12
  i32.const 7
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
 )
 (func $~lib/util/string/strtol<f64> (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  block $folding-inner0
   local.get $0
   call $~lib/rt/pure/__retain
   local.tee $2
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $0
   i32.eqz
   br_if $folding-inner0
   local.get $2
   local.tee $3
   i32.load16_u
   local.set $1
   loop $while-continue|0
    block $__inlined_func$~lib/util/string/isSpace (result i32)
     local.get $1
     i32.const 128
     i32.or
     i32.const 160
     i32.eq
     local.get $1
     i32.const 9
     i32.sub
     i32.const 4
     i32.le_u
     i32.or
     local.get $1
     i32.const 5760
     i32.lt_u
     br_if $__inlined_func$~lib/util/string/isSpace
     drop
     i32.const 1
     local.get $1
     i32.const -8192
     i32.add
     i32.const 10
     i32.le_u
     br_if $__inlined_func$~lib/util/string/isSpace
     drop
     i32.const 1
     local.get $1
     i32.const 5760
     i32.eq
     local.get $1
     i32.const 8232
     i32.eq
     i32.or
     local.get $1
     i32.const 8233
     i32.eq
     local.get $1
     i32.const 8239
     i32.eq
     i32.or
     i32.or
     local.get $1
     i32.const 8287
     i32.eq
     local.get $1
     i32.const 12288
     i32.eq
     i32.or
     local.get $1
     i32.const 65279
     i32.eq
     i32.or
     i32.or
     br_if $__inlined_func$~lib/util/string/isSpace
     drop
     i32.const 0
    end
    if
     local.get $3
     i32.const 2
     i32.add
     local.tee $3
     i32.load16_u
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $while-continue|0
    end
   end
   f64.const 1
   local.set $4
   i32.const 1
   local.get $1
   i32.const 43
   i32.eq
   local.get $1
   i32.const 45
   i32.eq
   select
   if (result i32)
    local.get $0
    i32.const 1
    i32.sub
    local.tee $0
    i32.eqz
    br_if $folding-inner0
    f64.const -1
    f64.const 1
    local.get $1
    i32.const 45
    i32.eq
    select
    local.set $4
    local.get $3
    i32.const 2
    i32.add
    local.tee $3
    i32.load16_u
   else
    local.get $1
   end
   i32.const 48
   i32.eq
   i32.const 0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   if (result i32)
    local.get $3
    i32.load16_u offset=2
    i32.const 32
    i32.or
    i32.const 120
    i32.eq
   else
    i32.const 0
   end
   if
    local.get $3
    i32.const 4
    i32.add
    local.set $3
    local.get $0
    i32.const 2
    i32.sub
    local.set $0
   end
   loop $while-continue|2
    block $while-break|2
     local.get $0
     local.tee $1
     i32.const 1
     i32.sub
     local.set $0
     local.get $1
     if
      local.get $3
      i32.load16_u
      local.tee $1
      i32.const 48
      i32.sub
      i32.const 10
      i32.lt_u
      if (result i32)
       local.get $1
       i32.const 48
       i32.sub
      else
       local.get $1
       i32.const 55
       i32.sub
       local.get $1
       i32.const 87
       i32.sub
       local.get $1
       local.get $1
       i32.const 97
       i32.sub
       i32.const 25
       i32.le_u
       select
       local.get $1
       i32.const 65
       i32.sub
       i32.const 25
       i32.le_u
       select
      end
      local.tee $1
      i32.const 16
      i32.ge_u
      if
       local.get $5
       i64.reinterpret_f64
       i64.const 1
       i64.shl
       i64.const 2
       i64.sub
       i64.const -9007199254740994
       i64.gt_u
       br_if $folding-inner0
       br $while-break|2
      end
      local.get $5
      f64.const 16
      f64.mul
      local.get $1
      f64.convert_i32_u
      f64.add
      local.set $5
      local.get $3
      i32.const 2
      i32.add
      local.set $3
      br $while-continue|2
     end
    end
   end
   local.get $4
   local.get $5
   f64.mul
   local.get $2
   call $~lib/rt/pure/__release
   return
  end
  local.get $2
  call $~lib/rt/pure/__release
  f64.const nan:0x8000000000000
 )
 (func $~lib/typedarray/Uint8Array#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1808
   i32.const 1872
   i32.const 163
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  local.get $2
  i32.store8
 )
 (func $assembly/lib/__tests__/helpers/parseHexString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  call $~lib/typedarray/Uint8Array#constructor
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.lt_s
   if
    local.get $2
    i32.const 2
    i32.div_s
    local.set $5
    block $__inlined_func$~lib/string/String#substr (result i32)
     i32.const 1776
     i32.const 2
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $3
     local.get $2
     local.tee $1
     i32.const 0
     i32.lt_s
     if
      local.get $1
      local.get $3
      i32.add
      local.tee $1
      i32.const 0
      local.get $1
      i32.const 0
      i32.gt_s
      select
      local.set $1
     end
     local.get $1
     i32.sub
     local.tee $3
     local.get $3
     i32.const 2
     i32.gt_s
     select
     i32.const 1
     i32.shl
     local.tee $3
     i32.const 0
     i32.le_s
     br_if $__inlined_func$~lib/string/String#substr
     drop
     local.get $3
     i32.const 1
     call $~lib/rt/pure/__new
     local.tee $6
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.get $3
     call $~lib/memory/memory.copy
     local.get $6
     call $~lib/rt/pure/__retain
    end
    local.tee $1
    call $~lib/rt/pure/__retain
    local.tee $3
    call $~lib/util/string/strtol<f64>
    local.set $7
    local.get $3
    call $~lib/rt/pure/__release
    local.get $4
    local.get $5
    local.get $7
    i32.trunc_f64_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    call $~lib/rt/pure/__release
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $4
 )
 (func $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 24
  i32.const 9
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  f64.const 0
  f64.store offset=8
  local.get $1
  f64.const 0
  f64.store offset=16
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $2
  local.tee $0
  local.get $1
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $0
   call $~lib/rt/pure/__retain
   local.set $0
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $1
  local.get $0
  i32.store
  local.get $1
  f64.const 0
  f64.store offset=8
  local.get $1
  f64.const 0
  f64.store offset=16
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
 )
 (func $~lib/typedarray/Uint8Array#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $4
  i32.load offset=8
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $0
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $0
  i32.sub
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $1
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $2
  call $~lib/rt/pure/__retain
  local.tee $3
  i32.load offset=4
  local.get $0
  local.get $4
  i32.load offset=4
  i32.add
  local.get $1
  call $~lib/memory/memory.copy
  local.get $4
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/lib/utils/pipeBuffer/PipeBuffer#read (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $0
  f64.load offset=8
  local.get $1
  f64.convert_i32_s
  f64.add
  f64.store offset=8
  local.get $0
  i32.load
  i32.const 0
  local.get $1
  call $~lib/typedarray/Uint8Array#slice
  local.get $0
  i32.load
  local.get $1
  i32.const 2147483647
  call $~lib/typedarray/Uint8Array#slice
  local.set $1
  local.get $0
  i32.load
  call $~lib/rt/pure/__release
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.get $0
  local.get $1
  i32.add
  local.tee $3
  i32.gt_u
  if
   i32.const 0
   i32.const 1936
   i32.const 740
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/pure/__new
  local.tee $5
  local.set $1
  loop $while-continue|0
   local.get $0
   local.get $3
   i32.lt_u
   if
    block $while-break|0
     local.get $0
     i32.load8_u
     local.set $2
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     local.get $2
     i32.const 128
     i32.and
     if
      local.get $0
      local.get $3
      i32.eq
      br_if $while-break|0
      local.get $0
      i32.load8_u
      i32.const 63
      i32.and
      local.set $4
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      local.get $2
      i32.const 224
      i32.and
      i32.const 192
      i32.eq
      if
       local.get $1
       local.get $4
       local.get $2
       i32.const 31
       i32.and
       i32.const 6
       i32.shl
       i32.or
       i32.store16
      else
       local.get $0
       local.get $3
       i32.eq
       br_if $while-break|0
       local.get $0
       i32.load8_u
       i32.const 63
       i32.and
       local.set $6
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       local.get $2
       i32.const 240
       i32.and
       i32.const 224
       i32.eq
       if
        local.get $6
        local.get $2
        i32.const 15
        i32.and
        i32.const 12
        i32.shl
        local.get $4
        i32.const 6
        i32.shl
        i32.or
        i32.or
        local.set $2
       else
        local.get $0
        local.get $3
        i32.eq
        br_if $while-break|0
        local.get $0
        i32.load8_u
        i32.const 63
        i32.and
        local.get $2
        i32.const 7
        i32.and
        i32.const 18
        i32.shl
        local.get $4
        i32.const 12
        i32.shl
        i32.or
        local.get $6
        i32.const 6
        i32.shl
        i32.or
        i32.or
        local.set $2
        local.get $0
        i32.const 1
        i32.add
        local.set $0
       end
       local.get $2
       i32.const 65536
       i32.lt_u
       if
        local.get $1
        local.get $2
        i32.store16
       else
        local.get $1
        local.get $2
        i32.const 65536
        i32.sub
        local.tee $2
        i32.const 10
        i32.shr_u
        i32.const 55296
        i32.or
        local.get $2
        i32.const 1023
        i32.and
        i32.const 56320
        i32.or
        i32.const 16
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 2
        i32.add
        local.set $1
       end
      end
     else
      local.get $1
      local.get $2
      i32.store16
     end
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
  end
  local.get $5
  local.get $1
  local.get $5
  i32.sub
  call $~lib/rt/pure/__renew
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String.UTF8.decode (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $0
  i32.const 20
  i32.sub
  i32.load offset=16
  local.set $1
  local.get $0
  local.get $1
  call $~lib/string/String.UTF8.decodeUnsafe
  local.get $0
  call $~lib/rt/pure/__release
 )
 (func $~lib/typedarray/Uint8Array#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1808
   i32.const 1872
   i32.const 152
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  i32.load8_u
 )
 (func $assembly/lib/utils/LEB128/DecodeLEB128Unsigned (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  i32.const 1
  local.set $1
  loop $while-continue|1
   local.get $1
   if
    local.get $0
    i32.const 1
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
    local.tee $5
    i32.const 0
    call $~lib/typedarray/Uint8Array#__get
    local.set $2
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    local.get $2
    i32.const 128
    i32.and
    i32.const 0
    i32.ne
    local.set $1
    local.get $3
    local.get $2
    i32.const 127
    i32.and
    i64.extend_i32_u
    local.get $4
    i64.shl
    i64.or
    local.set $3
    local.get $4
    i64.const 7
    i64.add
    local.set $4
    local.get $5
    call $~lib/rt/pure/__release
    br $while-continue|1
   end
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/lib/utils/LEB128/DecodeLEB128Signed (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.load
  call $~lib/rt/pure/__retain
  local.set $0
  loop $for-loop|0
   local.get $1
   local.get $0
   i32.load offset=8
   i32.lt_s
   if
    block $for-break0
     local.get $0
     local.get $1
     call $~lib/typedarray/Uint8Array#__get
     i32.const 128
     i32.lt_u
     if
      local.get $0
      local.get $1
      call $~lib/typedarray/Uint8Array#__get
      i32.const 64
      i32.and
      i32.eqz
      if
       local.get $2
       call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
       local.get $2
       call $~lib/rt/pure/__release
       local.get $0
       call $~lib/rt/pure/__release
       return
      end
      br $for-break0
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
  end
  local.get $2
  local.get $1
  i32.const 1
  i32.add
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
  local.tee $4
  i32.load offset=8
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|1
   local.get $1
   i32.const 0
   i32.ge_s
   if
    i32.const 127
    local.get $4
    local.get $1
    call $~lib/typedarray/Uint8Array#__get
    i32.const 127
    i32.and
    i32.sub
    local.get $5
    i32.const 7
    i32.shl
    i32.add
    local.set $5
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|1
   end
  end
  i32.const 0
  local.get $5
  i32.sub
  i32.const 1
  i32.sub
  i64.extend_i32_s
  local.get $0
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 16
  local.get $2
  call $~lib/rt/pure/__new
  local.tee $2
  local.get $0
  local.get $1
  i32.shl
  local.tee $4
  local.set $5
  local.get $4
  i32.const 0
  call $~lib/rt/pure/__new
  local.set $1
  local.get $3
  if
   local.get $1
   local.get $3
   local.get $5
   call $~lib/memory/memory.copy
  end
  local.get $1
  call $~lib/rt/pure/__retain
  i32.store
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $4
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  local.get $2
 )
 (func $~lib/array/ensureSize (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  local.tee $3
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 1664
    i32.const 2048
    i32.const 14
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.tee $4
   local.get $1
   local.get $2
   i32.shl
   local.tee $2
   call $~lib/rt/pure/__renew
   local.tee $1
   local.get $3
   i32.add
   local.get $2
   local.get $3
   i32.sub
   call $~lib/memory/memory.fill
   local.get $1
   local.get $4
   i32.ne
   if
    local.get $0
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.store offset=4
   end
   local.get $0
   local.get $2
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
 )
 (func $assembly/lib/candid/decode/Decoder#init (param $0 i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load
  i32.const 1324
  i32.load
  i32.const 1
  i32.shr_u
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
  local.tee $4
  i32.load
  call $~lib/string/String.UTF8.decode
  local.get $0
  i32.load
  call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
  i32.wrap_i64
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $6
   i32.gt_s
   if
    block $break|1
     block $case2|1
      block $case1|1
       local.get $0
       i32.load
       call $assembly/lib/utils/LEB128/DecodeLEB128Signed
       i32.wrap_i64
       i32.const 24
       i32.shl
       i32.const 24
       i32.shr_s
       local.tee $7
       i32.const -18
       i32.ne
       if
        local.get $7
        i32.const -19
        i32.eq
        br_if $case1|1
        local.get $7
        i32.const -20
        i32.eq
        br_if $case2|1
        br $break|1
       end
       local.get $0
       i32.load
       call $assembly/lib/utils/LEB128/DecodeLEB128Signed
       drop
       br $break|1
      end
      local.get $0
      i32.load
      call $assembly/lib/utils/LEB128/DecodeLEB128Signed
      drop
      br $break|1
     end
     i32.const 0
     i32.const 2
     i32.const 10
     i32.const 1984
     call $~lib/rt/__newArray
     call $~lib/rt/pure/__retain
     local.get $0
     i32.load
     call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
     local.set $2
     loop $while-continue|2
      local.get $2
      local.tee $1
      i64.const 1
      i64.sub
      local.set $2
      local.get $1
      i64.const 0
      i64.ne
      if
       local.get $0
       i32.load
       call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
       drop
       local.get $0
       i32.load
       call $assembly/lib/utils/LEB128/DecodeLEB128Signed
       drop
       br $while-continue|2
      end
     end
     call $~lib/rt/pure/__release
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
  i32.wrap_i64
  local.set $5
  i32.const 0
  i32.const 2
  i32.const 11
  i32.const 2016
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $7
  i32.const 0
  local.set $6
  loop $for-loop|3
   local.get $5
   local.get $6
   i32.gt_s
   if
    local.get $7
    local.get $0
    i32.load
    call $assembly/lib/utils/LEB128/DecodeLEB128Signed
    i32.wrap_i64
    call $~lib/array/Array<i32>#push
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|3
   end
  end
  local.get $4
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/candid/decode/Decoder#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 4
  i32.const 8
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $1
  i32.const 0
  i32.store
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $0
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor
  local.set $2
  local.get $1
  i32.load
  call $~lib/rt/pure/__release
  local.get $1
  local.get $2
  i32.store
  local.get $1
  call $assembly/lib/candid/decode/Decoder#init
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
 )
 (func $assembly/lib/candid/idl/types/Type#constructor (param $0 i32) (result i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 0
   i32.const 16
   call $~lib/rt/pure/__new
   call $~lib/rt/pure/__retain
  end
 )
 (func $assembly/lib/candid/idl/types/PrimitiveType#constructor (param $0 i32) (result i32)
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 0
   i32.const 15
   call $~lib/rt/pure/__new
   call $~lib/rt/pure/__retain
  end
  call $assembly/lib/candid/idl/types/Type#constructor
 )
 (func $~lib/array/Array<~lib/string/String>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  call $~lib/array/ensureSize
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  call $~lib/rt/pure/__retain
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/assert/assert (param $0 i32) (param $1 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  i32.eqz
  if
   local.get $1
   i32.const 2432
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<usize>#__uget (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $2
  i32.eq
  local.get $1
  local.get $3
  i32.eq
  i32.and
  local.get $0
  local.get $3
  i32.eq
  local.get $1
  local.get $2
  i32.eq
  i32.and
  i32.or
 )
 (func $~lib/array/Array<~lib/string/String>#__uget (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  call $~lib/rt/pure/__retain
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $3
  local.tee $0
  i32.const 7
  i32.and
  local.get $4
  local.tee $1
  i32.const 7
  i32.and
  i32.or
  i32.eqz
  i32.const 0
  local.get $2
  i32.const 4
  i32.ge_u
  select
  if
   loop $do-continue|0
    local.get $0
    i64.load
    local.get $1
    i64.load
    i64.eq
    if
     local.get $0
     i32.const 8
     i32.add
     local.set $0
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     local.get $2
     i32.const 4
     i32.sub
     local.tee $2
     i32.const 4
     i32.ge_u
     br_if $do-continue|0
    end
   end
  end
  loop $while-continue|1
   local.get $2
   local.tee $5
   i32.const 1
   i32.sub
   local.set $2
   local.get $5
   if
    local.get $0
    i32.load16_u
    local.tee $5
    local.get $1
    i32.load16_u
    local.tee $6
    i32.ne
    if
     local.get $5
     local.get $6
     i32.sub
     local.get $3
     call $~lib/rt/pure/__release
     local.get $4
     call $~lib/rt/pure/__release
     return
    end
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    br $while-continue|1
   end
  end
  local.get $3
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  i32.const 0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.tee $1
  i32.eq
  if
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   i32.const 1
   return
  end
  block $folding-inner0
   local.get $1
   i32.eqz
   i32.const 1
   local.get $0
   select
   br_if $folding-inner0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.ne
   br_if $folding-inner0
   local.get $0
   local.get $1
   local.get $2
   call $~lib/util/string/compareImpl
   i32.eqz
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  i32.const 0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $3
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  if
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   i32.const 1
   return
  end
  local.get $0
  i32.eqz
  local.get $1
  i32.eqz
  i32.xor
  if
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   i32.const 0
   return
  end
  local.get $0
  call $~lib/rt/pure/__retain
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $3
  call $~lib/rt/pure/__retain
  local.tee $7
  i32.load offset=12
  i32.const 1
  i32.and
  i32.eqz
  i32.const 2352
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  i32.const 0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<~lib/string/String>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $3
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.load offset=12
  local.tee $3
  local.set $7
  local.get $3
  i32.const 1
  i32.and
  i32.eqz
  i32.const 2352
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  loop $for-loop|0
   local.get $4
   local.get $7
   i32.lt_s
   if
    local.get $0
    local.get $1
    local.get $2
    local.get $4
    call $~lib/array/Array<usize>#__uget
    local.get $2
    local.get $4
    i32.const 1
    i32.add
    call $~lib/array/Array<usize>#__uget
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
    if
     local.get $0
     call $~lib/rt/pure/__release
     local.get $1
     call $~lib/rt/pure/__release
     local.get $5
     call $~lib/rt/pure/__release
     local.get $2
     call $~lib/rt/pure/__release
     i32.const 1
     return
    end
    local.get $4
    i32.const 2
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $5
  i32.load offset=12
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $3
   local.get $4
   i32.gt_s
   if
    local.get $0
    local.get $1
    local.get $5
    local.get $4
    call $~lib/array/Array<usize>#__uget
    local.get $5
    local.get $4
    i32.const 1
    i32.add
    call $~lib/array/Array<usize>#__uget
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
    if
     local.get $0
     call $~lib/rt/pure/__release
     local.get $1
     call $~lib/rt/pure/__release
     local.get $5
     call $~lib/rt/pure/__release
     local.get $2
     call $~lib/rt/pure/__release
     i32.const 2
     return
    end
    local.get $4
    i32.const 2
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  local.get $0
  i32.load offset=12
  local.tee $7
  local.get $1
  i32.load offset=12
  i32.ne
  if
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   i32.const 0
   return
  end
  loop $for-loop|2
   local.get $6
   local.get $7
   i32.lt_s
   if
    local.get $0
    local.get $6
    call $~lib/array/Array<~lib/string/String>#__uget
    local.tee $3
    local.get $1
    local.get $6
    call $~lib/array/Array<~lib/string/String>#__uget
    local.tee $4
    local.get $5
    local.get $2
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>
    i32.eqz
    if
     local.get $0
     call $~lib/rt/pure/__release
     local.get $1
     call $~lib/rt/pure/__release
     local.get $5
     call $~lib/rt/pure/__release
     local.get $2
     call $~lib/rt/pure/__release
     local.get $3
     call $~lib/rt/pure/__release
     local.get $4
     call $~lib/rt/pure/__release
     i32.const 0
     return
    end
    local.get $3
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|2
   end
  end
  local.get $2
  local.get $0
  call $~lib/array/Array<i32>#push
  local.get $2
  local.get $1
  call $~lib/array/Array<i32>#push
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  i32.const 1
 )
 (func $~lib/util/hash/hash32 (param $0 i32) (result i32)
  local.get $0
  i32.const 255
  i32.and
  i32.const -2128831035
  i32.xor
  i32.const 16777619
  i32.mul
  local.get $0
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  i32.xor
  i32.const 16777619
  i32.mul
  local.get $0
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  i32.xor
  i32.const 16777619
  i32.mul
  local.get $0
  i32.const 24
  i32.shr_u
  i32.xor
  i32.const 16777619
  i32.mul
 )
 (func $~lib/map/Map<usize,i32>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.load
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     local.get $0
     return
    end
    local.get $0
    i32.load offset=8
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  i32.const 0
 )
 (func $~lib/map/Map<usize,i32>#has (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/hash32
  call $~lib/map/Map<usize,i32>#find
  i32.const 0
  i32.ne
 )
 (func $~lib/map/Map<usize,i32>#get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/hash32
  call $~lib/map/Map<usize,i32>#find
  local.tee $0
  i32.eqz
  if
   i32.const 2720
   i32.const 2784
   i32.const 104
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1664
   i32.const 1712
   i32.const 49
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/rt/pure/__new
  local.tee $1
  local.get $0
  call $~lib/memory/memory.fill
  local.get $1
  call $~lib/rt/pure/__retain
 )
 (func $~lib/map/Map<usize,i32>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $5
  local.get $3
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $6
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $3
  local.get $0
  i32.load offset=8
  local.tee $4
  local.get $0
  i32.load offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $7
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $4
   local.get $7
   i32.ne
   if
    local.get $4
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $2
     local.get $4
     i32.load
     i32.store
     local.get $2
     local.get $4
     i32.load offset=4
     i32.store offset=4
     local.get $2
     local.get $5
     local.get $4
     i32.load
     call $~lib/util/hash/hash32
     local.get $1
     i32.and
     i32.const 2
     i32.shl
     i32.add
     local.tee $8
     i32.load
     i32.store offset=8
     local.get $8
     local.get $2
     i32.store
     local.get $2
     i32.const 12
     i32.add
     local.set $2
    end
    local.get $4
    i32.const 12
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  local.get $5
  local.tee $4
  local.get $0
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   local.set $4
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $0
  local.get $4
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $3
  local.tee $1
  local.get $0
  i32.load offset=8
  local.tee $4
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $6
  i32.store offset=12
  local.get $0
  local.get $0
  i32.load offset=20
  i32.store offset=16
  local.get $5
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $~lib/map/Map<usize,i32>#set (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/hash32
  local.tee $5
  call $~lib/map/Map<usize,i32>#find
  local.tee $3
  if
   local.get $3
   local.get $2
   i32.store offset=4
  else
   local.get $0
   i32.load offset=16
   local.get $0
   i32.load offset=12
   i32.eq
   if
    local.get $0
    local.get $0
    i32.load offset=20
    local.get $0
    i32.load offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<usize,i32>#rehash
   end
   local.get $0
   i32.load offset=8
   call $~lib/rt/pure/__retain
   local.set $4
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $3
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $4
   local.get $3
   i32.const 12
   i32.mul
   i32.add
   local.tee $3
   local.get $1
   i32.store
   local.get $3
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   local.get $3
   local.get $0
   i32.load
   local.get $5
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $1
   i32.load
   i32.store offset=8
   local.get $1
   local.get $3
   i32.store
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $0
  call $~lib/rt/pure/__retain
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  block $folding-inner0
   local.get $0
   i32.eqz
   if
    i32.const 1
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 4
    i32.const 1
    i32.const 1
    i32.const 2832
    i32.const 0
    i32.const 0
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.set $2
    br $folding-inner0
   end
   local.get $1
   local.get $0
   call $~lib/map/Map<usize,i32>#has
   if
    local.get $1
    local.get $0
    call $~lib/map/Map<usize,i32>#get
    local.set $2
    br $folding-inner0
   end
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   local.get $0
   i32.const 0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 2
   i32.const 1
   i32.const 2832
   local.get $0
   i32.const 0
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.tee $2
   call $~lib/map/Map<usize,i32>#set
   call $~lib/rt/pure/__release
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<~lib/string/String>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  block $folding-inner0
   local.get $0
   i32.eqz
   if
    i32.const 1
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 4
    i32.const 1
    i32.const 12
    i32.const 2640
    i32.const 0
    i32.const 0
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.set $2
    br $folding-inner0
   end
   local.get $1
   local.get $0
   call $~lib/map/Map<usize,i32>#has
   if
    local.get $1
    local.get $0
    call $~lib/map/Map<usize,i32>#get
    local.set $2
    br $folding-inner0
   end
   local.get $0
   i32.load offset=12
   local.tee $3
   local.set $4
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   local.get $0
   i32.const 0
   local.get $3
   i32.const 10
   i32.const 12
   i32.const 2640
   i32.const 0
   i32.const 1
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.tee $3
   call $~lib/map/Map<usize,i32>#set
   call $~lib/rt/pure/__release
   loop $for-loop|0
    local.get $2
    local.get $4
    i32.lt_s
    if
     local.get $3
     local.get $0
     local.get $2
     call $~lib/array/Array<~lib/string/String>#__uget
     local.tee $5
     call $~lib/rt/pure/__retain
     local.tee $6
     local.get $1
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
     local.get $5
     call $~lib/rt/pure/__release
     local.get $6
     call $~lib/rt/pure/__release
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $3
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $~lib/map/Map<usize,i32>#constructor (result i32)
  (local $0 i32)
  i32.const 24
  i32.const 17
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $0
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $0
  i32.const 3
  i32.store offset=4
  local.get $0
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $0
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<~lib/string/String>>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $2
   local.set $1
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<~lib/string/String>>
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<~lib/string/String>>#toStrictEqual (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $0
  i32.load offset=4
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 2576
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $7
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 2608
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $8
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $7
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $8
  call $~lib/rt/pure/__retain
  local.set $5
  block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<~lib/string/String>>
   local.get $2
   local.get $3
   i32.eq
   if
    local.get $3
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 1
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<~lib/string/String>>
   end
   local.get $3
   i32.eqz
   local.get $2
   i32.eqz
   i32.xor
   if
    local.get $3
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 0
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<~lib/string/String>>
   end
   local.get $3
   local.get $2
   local.get $4
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<~lib/string/String>>
   local.set $1
   local.get $3
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
  end
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $1
  i32.const 1
  i32.eq
  local.get $0
  i32.load offset=4
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<~lib/string/String>>@varargs
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<~lib/string/String>>@varargs
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $2
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  i32.load
  i32.xor
  i32.const 2224
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
  local.get $6
  call $~lib/rt/pure/__release
  i32.const 2224
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $1
   local.set $0
  end
  local.get $0
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1808
   i32.const 2048
   i32.const 104
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  i32.load8_u
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $3
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $2
  i32.const 0
  i32.lt_s
  if
   i32.const 1808
   i32.const 1872
   i32.const 1774
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.get $2
  local.get $0
  i32.load offset=8
  i32.add
  i32.lt_s
  if
   i32.const 1808
   i32.const 1872
   i32.const 1775
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  i32.load offset=4
  i32.add
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=8
  call $~lib/memory/memory.copy
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/utils/pipeBuffer/PipeBuffer#writeUint8Array (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.tee $3
  i32.load offset=8
  local.set $1
  local.get $0
  local.get $0
  f64.load offset=16
  local.get $1
  f64.convert_i32_s
  f64.add
  f64.store offset=16
  local.get $3
  i32.load offset=8
  local.get $0
  i32.load
  i32.load offset=8
  i32.add
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1
  local.get $0
  i32.load
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array>
  local.get $1
  local.get $3
  local.get $0
  i32.load
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array>
  local.get $1
  local.set $2
  local.get $1
  local.get $0
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $2
   call $~lib/rt/pure/__retain
   local.set $2
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $0
  local.get $2
  i32.store
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/utils/pipeBuffer/PipeBuffer#write (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $0
  i32.const 0
  local.set $0
  local.get $4
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.load offset=12
  call $~lib/typedarray/Uint8Array#constructor
  local.set $3
  loop $for-loop|0
   local.get $0
   local.get $2
   i32.load offset=12
   i32.lt_s
   if
    local.get $3
    local.get $0
    local.get $2
    local.get $0
    call $~lib/array/Array<u8>#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#writeUint8Array
  local.get $4
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/candid/encode/Encoder#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 20
  i32.const 18
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store8 offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $2
  i32.const 0
  i32.store offset=16
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $0
  local.get $2
  i32.load
  call $~lib/rt/pure/__release
  local.get $2
  local.get $0
  i32.store
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $0
  local.get $2
  i32.load offset=8
  call $~lib/rt/pure/__release
  local.get $2
  local.get $0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store8 offset=4
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $0
  local.get $2
  i32.load offset=16
  call $~lib/rt/pure/__release
  local.get $2
  local.get $0
  i32.store offset=16
  local.get $1
  local.tee $0
  local.get $2
  i32.load offset=12
  local.tee $3
  i32.ne
  if
   local.get $0
   call $~lib/rt/pure/__retain
   local.set $0
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $2
  local.get $0
  i32.store offset=12
  local.get $2
  i32.load
  i32.const 1280
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $assembly/lib/candid/idl/types/Vec (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $2
  i32.const 4
  i32.const 21
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $0
  i32.const 0
  i32.store
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 0
   i32.const 22
   call $~lib/rt/pure/__new
   call $~lib/rt/pure/__retain
  end
  call $assembly/lib/candid/idl/types/Type#constructor
  local.tee $3
  i32.load
  local.tee $4
  local.get $1
  local.tee $0
  i32.ne
  if
   local.get $0
   call $~lib/rt/pure/__retain
   local.set $0
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $3
  local.get $0
  i32.store
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/lib/candid/recordRegistry/RecordRegistery.getInstance (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $assembly/lib/candid/recordRegistry/RecordRegistery.instance
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/pure/__new
   call $~lib/rt/pure/__retain
   local.tee $1
   i32.const 0
   i32.store
   i32.const 24
   i32.const 6
   call $~lib/rt/pure/__new
   call $~lib/rt/pure/__retain
   local.tee $0
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   i32.store
   local.get $0
   i32.const 3
   i32.store offset=4
   local.get $0
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   i32.store offset=8
   local.get $0
   i32.const 4
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $1
   i32.load
   call $~lib/rt/pure/__release
   local.get $1
   local.get $0
   i32.store
   global.get $assembly/lib/candid/recordRegistry/RecordRegistery.instance
   call $~lib/rt/pure/__release
   local.get $1
   global.set $assembly/lib/candid/recordRegistry/RecordRegistery.instance
  end
  global.get $assembly/lib/candid/recordRegistry/RecordRegistery.instance
  call $~lib/rt/pure/__retain
 )
 (func $assembly/lib/utils/LEB128/EncodeLEB128Unsigned (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $2
  i32.const 1
  local.set $3
  loop $while-continue|1
   local.get $3
   if
    local.get $0
    i64.const 127
    i64.and
    i32.wrap_i64
    local.tee $1
    i32.const 128
    i32.or
    local.get $1
    local.get $0
    i64.const 7
    i64.shr_u
    local.tee $0
    i64.const 0
    i64.ne
    local.tee $3
    select
    local.set $1
    i32.const 1
    i32.const 0
    i32.const 3
    i32.const 0
    call $~lib/rt/__newArray
    call $~lib/rt/pure/__retain
    local.tee $4
    i32.load offset=4
    local.get $1
    i32.store8
    local.get $2
    local.get $4
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $4
    call $~lib/rt/pure/__release
    br $while-continue|1
   end
  end
  local.get $2
 )
 (func $assembly/lib/utils/pipeBuffer/PipeBuffer#append (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.tee $1
  i32.load
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#writeUint8Array
  local.get $0
  call $~lib/rt/pure/__retain
  local.get $1
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<~lib/string/String>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1808
   i32.const 2048
   i32.const 104
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__uget
  local.tee $0
  i32.eqz
  if
   i32.const 2864
   i32.const 2048
   i32.const 108
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/string/String.UTF8.encodeUnsafe (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  local.get $2
  local.set $1
  loop $while-continue|0
   local.get $0
   local.get $3
   i32.lt_u
   if
    local.get $0
    i32.load16_u
    local.tee $2
    i32.const 128
    i32.lt_u
    if (result i32)
     local.get $1
     local.get $2
     i32.store8
     local.get $1
     i32.const 1
     i32.add
    else
     local.get $2
     i32.const 2048
     i32.lt_u
     if (result i32)
      local.get $1
      local.get $2
      i32.const 6
      i32.shr_u
      i32.const 192
      i32.or
      local.get $2
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.const 8
      i32.shl
      i32.or
      i32.store16
      local.get $1
      i32.const 2
      i32.add
     else
      local.get $3
      local.get $0
      i32.const 2
      i32.add
      i32.gt_u
      i32.const 0
      local.get $2
      i32.const 64512
      i32.and
      i32.const 55296
      i32.eq
      select
      if
       local.get $0
       i32.load16_u offset=2
       local.tee $4
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        local.get $1
        local.get $2
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.const 65536
        i32.add
        local.get $4
        i32.const 1023
        i32.and
        i32.or
        local.tee $2
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.const 24
        i32.shl
        local.get $2
        i32.const 6
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.const 16
        i32.shl
        i32.or
        local.get $2
        i32.const 12
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.const 8
        i32.shl
        i32.or
        local.get $2
        i32.const 18
        i32.shr_u
        i32.const 240
        i32.or
        i32.or
        i32.store
        local.get $1
        i32.const 4
        i32.add
        local.set $1
        local.get $0
        i32.const 4
        i32.add
        local.set $0
        br $while-continue|0
       end
      end
      local.get $1
      local.get $2
      i32.const 12
      i32.shr_u
      i32.const 224
      i32.or
      local.get $2
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.const 8
      i32.shl
      i32.or
      i32.store16
      local.get $1
      local.get $2
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=2
      local.get $1
      i32.const 3
      i32.add
     end
    end
    local.set $1
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $assembly/lib/utils/pipeBuffer/PipeBuffer#writeArrayBuffer (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $0
  local.get $3
  i32.const 20
  i32.sub
  i32.load offset=16
  local.set $1
  local.get $3
  call $~lib/rt/pure/__retain
  local.tee $5
  call $~lib/rt/pure/__retain
  local.tee $4
  i32.const 20
  i32.sub
  i32.load offset=16
  local.set $0
  local.get $1
  i32.const 0
  i32.lt_s
  if
   local.get $1
   i32.const -1
   i32.ne
   if
    i32.const 1664
    i32.const 1872
    i32.const 1750
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $0
   local.get $1
   local.tee $0
   i32.lt_s
   if
    i32.const 1664
    i32.const 1872
    i32.const 1755
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 12
  i32.const 7
  call $~lib/rt/pure/__new
  local.tee $1
  local.get $4
  call $~lib/rt/pure/__retain
  i32.store
  local.get $1
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $4
  i32.store offset=4
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $4
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $0
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#writeUint8Array
  local.get $0
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/candid/idl/types/TextClass#encodeValue<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $4
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $3
  local.get $4
  call $~lib/rt/pure/__retain
  local.set $2
  i32.const 0
  local.set $0
  local.get $2
  call $~lib/rt/pure/__retain
  local.tee $7
  local.tee $1
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.add
  local.set $5
  loop $while-continue|0
   local.get $1
   local.get $5
   i32.lt_u
   if
    local.get $1
    i32.load16_u
    local.tee $6
    i32.const 128
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 1
     i32.add
    else
     local.get $6
     i32.const 2048
     i32.lt_u
     if (result i32)
      local.get $0
      i32.const 2
      i32.add
     else
      local.get $5
      local.get $1
      i32.const 2
      i32.add
      i32.gt_u
      i32.const 0
      local.get $6
      i32.const 64512
      i32.and
      i32.const 55296
      i32.eq
      select
      if
       local.get $1
       i32.load16_u offset=2
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        local.get $0
        i32.const 4
        i32.add
        local.set $0
        local.get $1
        i32.const 4
        i32.add
        local.set $1
        br $while-continue|0
       end
      end
      local.get $0
      i32.const 3
      i32.add
     end
    end
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
  local.get $7
  call $~lib/rt/pure/__release
  local.get $0
  i32.const 0
  call $~lib/rt/pure/__new
  local.set $0
  local.get $2
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.get $0
  call $~lib/string/String.UTF8.encodeUnsafe
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i64.extend_i32_s
  call $assembly/lib/utils/LEB128/EncodeLEB128Unsigned
  local.tee $1
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  call $~lib/rt/pure/__release
  local.get $3
  local.get $0
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#writeArrayBuffer
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $3
 )
 (func $assembly/lib/candid/idl/types/Type#encodeType (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $1
  call $~lib/rt/pure/__release
  local.get $1
 )
 (func $assembly/lib/candid/encode/Encoder#build (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 8
  i32.const 24
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 26
  i32.const 2992
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $3
  i32.load offset=4
  call $~lib/rt/pure/__release
  local.get $3
  local.get $1
  i32.store offset=4
  i32.const 24
  i32.const 25
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $1
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store
  local.get $1
  i32.const 3
  i32.store offset=4
  local.get $1
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  local.get $3
  i32.load
  call $~lib/rt/pure/__release
  local.get $3
  local.get $1
  i32.store
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.load offset=12
   i32.load offset=12
   i32.lt_s
   if
    local.get $0
    i32.load offset=12
    local.get $2
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $6
    call $assembly/lib/candid/idl/types/Type#get:name@virtual
    local.tee $1
    call $~lib/rt/pure/__retain
    local.set $7
    local.get $6
    local.get $3
    call $assembly/lib/candid/idl/types/Type#buildTypeTable@virtual
    local.get $1
    call $~lib/rt/pure/__release
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  i32.load
  i32.const 0
  local.set $1
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $2
  loop $for-loop|00
   local.get $1
   local.get $3
   i32.load offset=4
   i32.load offset=12
   i32.lt_s
   if
    local.get $2
    local.get $3
    i32.load offset=4
    local.get $1
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $4
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|00
   end
  end
  local.get $3
  i32.load offset=4
  i32.load offset=12
  i64.extend_i32_s
  call $assembly/lib/utils/LEB128/EncodeLEB128Unsigned
  local.tee $4
  local.get $2
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  local.set $1
  local.get $4
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $1
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  call $~lib/rt/pure/__release
  local.get $0
  i32.load
  i32.const 1
  i32.const 0
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.tee $5
  i32.load offset=4
  local.get $0
  i32.load8_u offset=4
  i32.store8
  local.get $5
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
  i32.const 0
  local.set $2
  loop $for-loop|1
   local.get $2
   local.get $0
   i32.load offset=12
   i32.load offset=12
   i32.lt_s
   if
    local.get $0
    i32.load
    local.get $0
    i32.load offset=12
    local.get $2
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $4
    local.get $3
    call $assembly/lib/candid/idl/types/Type#encodeType@virtual
    local.tee $8
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $8
    call $~lib/rt/pure/__release
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  local.get $0
  i32.load
  local.get $0
  i32.load offset=8
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  call $~lib/rt/pure/__release
  local.get $0
  i32.load
  i32.load
  call $~lib/rt/pure/__retain
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
 )
 (func $~lib/util/casemap/casemap (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $folding-inner0
   local.get $0
   i32.const 8
   i32.shr_u
   local.tee $2
   i32.const 7800
   i32.add
   i32.load8_u
   local.get $2
   i32.const 4160
   i32.add
   i32.load8_u
   i32.const 86
   i32.mul
   i32.const 4160
   i32.add
   local.get $0
   i32.const 255
   i32.and
   local.tee $5
   i32.const 3
   i32.div_u
   i32.add
   i32.load8_u
   local.get $5
   i32.const 3
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 6828
   i32.add
   i32.load
   i32.mul
   i32.const 11
   i32.shr_u
   i32.const 6
   i32.rem_u
   i32.add
   i32.const 2
   i32.shl
   i32.const 6840
   i32.add
   i32.load
   local.tee $2
   i32.const 8
   i32.shr_s
   local.set $3
   local.get $2
   i32.const 255
   i32.and
   local.tee $2
   i32.const 2
   i32.lt_u
   br_if $folding-inner0
   local.get $3
   i32.const 255
   i32.and
   local.set $2
   local.get $3
   i32.const 8
   i32.shr_u
   local.set $4
   loop $while-continue|0
    local.get $2
    if
     local.get $5
     local.get $2
     i32.const 1
     i32.shr_u
     local.tee $3
     local.get $4
     i32.add
     i32.const 1
     i32.shl
     i32.const 8312
     i32.add
     i32.load8_u
     local.tee $6
     i32.eq
     if (result i32)
      local.get $3
      local.get $4
      i32.add
      i32.const 1
      i32.shl
      i32.const 8312
      i32.add
      i32.load8_u offset=1
      i32.const 2
      i32.shl
      i32.const 6840
      i32.add
      i32.load
      local.tee $2
      i32.const 8
      i32.shr_s
      local.set $3
      local.get $2
      i32.const 255
      i32.and
      local.tee $2
      i32.const 2
      i32.lt_u
      br_if $folding-inner0
      local.get $0
      i32.const 1
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      i32.sub
      return
     else
      local.get $5
      local.get $6
      i32.lt_u
      if (result i32)
       local.get $3
      else
       local.get $3
       local.get $4
       i32.add
       local.set $4
       local.get $2
       local.get $3
       i32.sub
      end
     end
     local.set $2
     br $while-continue|0
    end
   end
   local.get $0
   return
  end
  local.get $0
  local.get $3
  i32.const 0
  local.get $1
  local.get $2
  i32.xor
  i32.sub
  i32.and
  i32.add
 )
 (func $~lib/string/String#toUpperCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $8
  i32.eqz
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $8
  i32.const 6
  i32.mul
  i32.const 1
  call $~lib/rt/pure/__new
  local.set $6
  i32.const 3340
  i32.load
  i32.const 1
  i32.shr_u
  local.set $3
  loop $for-loop|0
   local.get $7
   local.get $8
   i32.lt_u
   if
    local.get $0
    local.get $7
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.tee $2
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $7
      local.get $8
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $2
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $0
       local.get $7
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u offset=2
       local.tee $4
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $7
        i32.const 1
        i32.add
        local.set $7
        local.get $4
        i32.const 1023
        i32.and
        local.get $2
        local.tee $1
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $2
        i32.const 131072
        i32.ge_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         local.get $4
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
         br $for-continue|0
        end
       end
      end
      local.get $2
      i32.const 9424
      i32.sub
      i32.const 25
      i32.le_u
      if
       local.get $6
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       i32.const 26
       i32.sub
       i32.store16
      else
       local.get $2
       i32.const 223
       i32.sub
       i32.const 64056
       i32.le_u
       if (result i32)
        local.get $3
        local.set $1
        i32.const 0
        local.set $9
        block $~lib/util/casemap/bsearch|inlined.0
         loop $while-continue|1
          local.get $1
          local.get $9
          i32.ge_s
          if
           local.get $1
           local.get $9
           i32.add
           i32.const 3
           i32.shr_u
           i32.const 2
           i32.shl
           local.tee $4
           i32.const 1
           i32.shl
           i32.const 3344
           i32.add
           i32.load16_u
           local.get $2
           i32.sub
           local.tee $10
           i32.eqz
           br_if $~lib/util/casemap/bsearch|inlined.0
           local.get $10
           i32.const 31
           i32.shr_u
           if
            local.get $4
            i32.const 4
            i32.add
            local.set $9
           else
            local.get $4
            i32.const 4
            i32.sub
            local.set $1
           end
           br $while-continue|1
          end
         end
         i32.const -1
         local.set $4
        end
        local.get $4
       else
        i32.const -1
       end
       local.tee $1
       i32.const -1
       i32.xor
       if
        local.get $1
        i32.const 1
        i32.shl
        i32.const 3344
        i32.add
        local.tee $2
        i32.load16_u offset=6
        local.set $1
        local.get $6
        local.get $5
        i32.const 1
        i32.shl
        i32.add
        local.tee $4
        local.get $2
        i32.load offset=2
        i32.store
        local.get $4
        local.get $1
        i32.store16 offset=4
        local.get $5
        local.get $1
        i32.const 0
        i32.ne
        i32.const 1
        i32.add
        i32.add
        local.set $5
       else
        local.get $2
        i32.const 1
        call $~lib/util/casemap/casemap
        i32.const 2097151
        i32.and
        local.tee $1
        i32.const 65536
        i32.lt_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.store16
        else
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.const 65536
         i32.sub
         local.tee $1
         i32.const 1023
         i32.and
         i32.const 56320
         i32.or
         i32.const 16
         i32.shl
         local.get $1
         i32.const 10
         i32.shr_u
         i32.const 55296
         i32.or
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
        end
       end
      end
     end
    else
     local.get $6
     local.get $5
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $2
     i32.const 97
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 5
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     i32.store16
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $6
  local.get $5
  i32.const 1
  i32.shl
  call $~lib/rt/pure/__renew
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.const 8736
  local.get $2
  select
  local.set $3
  block $__inlined_func$~lib/string/String#concat
   local.get $1
   call $~lib/rt/pure/__retain
   local.tee $5
   call $~lib/rt/pure/__retain
   local.tee $1
   i32.eqz
   if
    local.get $1
    i32.const 8736
    i32.ne
    if
     local.get $1
     call $~lib/rt/pure/__release
    end
    i32.const 8736
    local.set $1
   end
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $6
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $4
   i32.add
   local.tee $0
   i32.eqz
   if
    i32.const 1776
    local.set $0
    br $__inlined_func$~lib/string/String#concat
   end
   local.get $0
   i32.const 1
   call $~lib/rt/pure/__new
   call $~lib/rt/pure/__retain
   local.tee $0
   local.get $3
   local.get $4
   call $~lib/memory/memory.copy
   local.get $0
   local.get $4
   i32.add
   local.get $1
   local.get $6
   call $~lib/memory/memory.copy
  end
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $assembly/lib/utils/helpers/Uint8ArrayToString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $5
  i32.const 1776
  local.set $0
  loop $for-loop|0
   local.get $6
   local.get $5
   i32.load offset=8
   i32.lt_s
   if
    block $__inlined_func$~lib/util/number/utoa32 (result i32)
     i32.const 3216
     local.get $5
     local.get $6
     call $~lib/typedarray/Uint8Array#__get
     i32.const 255
     i32.and
     local.tee $4
     i32.eqz
     br_if $__inlined_func$~lib/util/number/utoa32
     drop
     i32.const 31
     local.get $4
     i32.clz
     i32.sub
     i32.const 2
     i32.shr_s
     i32.const 1
     i32.add
     local.tee $2
     i32.const 1
     i32.shl
     i32.const 1
     call $~lib/rt/pure/__new
     local.tee $3
     local.set $7
     loop $do-continue|0
      local.get $7
      local.get $2
      i32.const 1
      i32.sub
      local.tee $2
      i32.const 1
      i32.shl
      i32.add
      local.get $4
      i32.const 15
      i32.and
      i32.const 48
      i32.or
      local.tee $1
      i32.const 39
      i32.const 0
      local.get $1
      i32.const 57
      i32.gt_u
      select
      i32.add
      i32.store16
      local.get $4
      i32.const 4
      i32.shr_u
      local.tee $4
      br_if $do-continue|0
     end
     local.get $3
     call $~lib/rt/pure/__retain
    end
    local.tee $7
    call $~lib/string/String#toUpperCase
    local.tee $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.const 1
    i32.eq
    if
     i32.const 3216
     local.get $1
     call $~lib/string/String.__concat
     local.set $2
     local.get $1
     local.tee $3
     local.get $2
     local.tee $1
     i32.ne
     if
      local.get $1
      call $~lib/rt/pure/__retain
      local.set $1
      local.get $3
      call $~lib/rt/pure/__release
     end
     local.get $2
     call $~lib/rt/pure/__release
    end
    local.get $0
    local.get $1
    call $~lib/string/String.__concat
    local.set $2
    local.get $0
    local.tee $3
    local.get $2
    local.tee $0
    i32.ne
    if
     local.get $0
     call $~lib/rt/pure/__retain
     local.set $0
     local.get $3
     call $~lib/rt/pure/__release
    end
    local.get $7
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $5
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $~lib/util/string/stagedBinaryLookup (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $0
  local.get $1
  i32.const 8
  i32.shr_u
  i32.add
  i32.load8_u
  i32.const 5
  i32.shl
  i32.add
  local.get $1
  i32.const 255
  i32.and
  i32.const 3
  i32.shr_u
  i32.add
  i32.load8_u
  local.get $1
  i32.const 7
  i32.and
  i32.shr_u
  i32.const 1
  i32.and
 )
 (func $~lib/string/String#toLowerCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $8
  i32.eqz
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $8
  i32.const 2
  i32.shl
  i32.const 1
  call $~lib/rt/pure/__new
  local.set $6
  loop $for-loop|0
   local.get $4
   local.get $8
   i32.lt_u
   if
    local.get $0
    local.get $4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.tee $1
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $4
      local.get $8
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $1
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $0
       local.get $4
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u offset=2
       local.tee $7
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        local.get $7
        i32.const 1023
        i32.and
        local.get $1
        local.tee $3
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $1
        i32.const 131072
        i32.ge_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $3
         local.get $7
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
         br $for-continue|0
        end
       end
      end
      local.get $1
      i32.const 304
      i32.eq
      if
       local.get $6
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       i32.const 50790505
       i32.store
       local.get $5
       i32.const 1
       i32.add
       local.set $5
      else
       local.get $1
       i32.const 931
       i32.eq
       if
        local.get $6
        local.get $5
        i32.const 1
        i32.shl
        i32.add
        i32.const 962
        i32.const 963
        local.get $8
        i32.const 1
        i32.gt_u
        if (result i32)
         block $~lib/util/string/isFinalSigma|inlined.0 (result i32)
          i32.const 0
          local.set $2
          i32.const 0
          local.get $4
          local.tee $3
          i32.const 30
          i32.sub
          local.tee $1
          local.get $1
          i32.const 0
          i32.lt_s
          select
          local.set $9
          loop $while-continue|1
           local.get $3
           local.get $9
           i32.gt_s
           if
            i32.const -1
            local.set $1
            block $~lib/util/string/codePointBefore|inlined.0
             local.get $3
             i32.const 0
             i32.le_s
             br_if $~lib/util/string/codePointBefore|inlined.0
             local.get $0
             local.get $3
             i32.const 1
             i32.sub
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u
             local.tee $7
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             local.get $3
             i32.const 2
             i32.ge_s
             i32.and
             if
              local.get $7
              i32.const 1023
              i32.and
              local.get $0
              local.get $3
              i32.const 2
              i32.sub
              i32.const 1
              i32.shl
              i32.add
              i32.load16_u
              local.tee $10
              i32.const 1023
              i32.and
              i32.const 10
              i32.shl
              i32.add
              i32.const 65536
              i32.add
              local.set $1
              local.get $10
              i32.const 64512
              i32.and
              i32.const 55296
              i32.eq
              br_if $~lib/util/string/codePointBefore|inlined.0
             end
             i32.const 65533
             local.get $7
             local.get $7
             i32.const 63488
             i32.and
             i32.const 55296
             i32.eq
             select
             local.set $1
            end
            local.get $1
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 8744
             local.get $1
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             i32.const 0
             local.get $1
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 11752
              local.get $1
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br_if $~lib/util/string/isFinalSigma|inlined.0
             drop
             i32.const 1
             local.set $2
            end
            local.get $3
            local.get $1
            i32.const 65536
            i32.ge_s
            i32.const 1
            i32.add
            i32.sub
            local.set $3
            br $while-continue|1
           end
          end
          i32.const 0
          local.get $2
          i32.eqz
          br_if $~lib/util/string/isFinalSigma|inlined.0
          drop
          local.get $4
          i32.const 1
          i32.add
          local.tee $3
          i32.const 30
          i32.add
          local.tee $1
          local.get $8
          local.get $1
          local.get $8
          i32.lt_s
          select
          local.set $2
          loop $while-continue|2
           local.get $2
           local.get $3
           i32.gt_s
           if
            local.get $0
            local.get $3
            i32.const 1
            i32.shl
            i32.add
            i32.load16_u
            local.tee $1
            i32.const 64512
            i32.and
            i32.const 55296
            i32.eq
            local.get $8
            local.get $3
            i32.const 1
            i32.add
            i32.ne
            i32.and
            if
             local.get $0
             local.get $3
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u offset=2
             local.tee $7
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             if
              local.get $7
              local.get $1
              i32.const 10
              i32.shl
              i32.add
              i32.const -56613888
              i32.add
              local.set $1
             end
            end
            local.get $1
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 8744
             local.get $1
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $1
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 11752
              local.get $1
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br $~lib/util/string/isFinalSigma|inlined.0
            end
            local.get $3
            local.get $1
            i32.const 65536
            i32.ge_u
            i32.const 1
            i32.add
            i32.add
            local.set $3
            br $while-continue|2
           end
          end
          i32.const 1
         end
        else
         i32.const 0
        end
        select
        i32.store16
       else
        local.get $1
        i32.const 9398
        i32.sub
        i32.const 25
        i32.le_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.const 26
         i32.add
         i32.store16
        else
         local.get $1
         i32.const 0
         call $~lib/util/casemap/casemap
         i32.const 2097151
         i32.and
         local.tee $3
         i32.const 65536
         i32.lt_u
         if
          local.get $6
          local.get $5
          i32.const 1
          i32.shl
          i32.add
          local.get $3
          i32.store16
         else
          local.get $6
          local.get $5
          i32.const 1
          i32.shl
          i32.add
          local.get $3
          i32.const 65536
          i32.sub
          local.tee $3
          i32.const 10
          i32.shr_u
          i32.const 55296
          i32.or
          local.get $3
          i32.const 1023
          i32.and
          i32.const 56320
          i32.or
          i32.const 16
          i32.shl
          i32.or
          i32.store
          local.get $5
          i32.const 1
          i32.add
          local.set $5
         end
        end
       end
      end
     end
    else
     local.get $6
     local.get $5
     i32.const 1
     i32.shl
     i32.add
     local.get $1
     local.get $1
     i32.const 65
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 5
     i32.shl
     i32.or
     i32.store16
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $6
  local.get $5
  i32.const 1
  i32.shl
  call $~lib/rt/pure/__renew
  call $~lib/rt/pure/__retain
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $2
   local.set $1
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String> (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $2
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $0
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.load offset=4
  call $~lib/rt/pure/__retain
  local.tee $1
  i32.const 1568
  call $~lib/string/String.__eq
  local.set $4
  local.get $0
  i32.load
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $2
  i32.const 1
  global.set $~argumentsLength
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs
  local.tee $3
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  local.get $2
  call $~lib/rt/pure/__release
  i32.const 1568
  i32.const 0
  i32.const 0
  local.get $1
  local.get $0
  select
  select
  if (result i32)
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 1568
   i32.const 0
   i32.const 2
   i32.const 10
   i32.const 13472
   call $~lib/rt/__newArray
   call $~lib/rt/pure/__retain
   local.tee $2
   i32.const 0
   i32.const 2
   i32.const 10
   i32.const 13504
   call $~lib/rt/__newArray
   call $~lib/rt/pure/__retain
   local.tee $3
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>
   local.get $2
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   i32.const 1
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 13536
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String>
  else
   i32.const 1568
   local.get $0
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String>
  end
  local.get $0
  local.get $4
  i32.xor
  i32.const 13344
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
  local.get $1
  call $~lib/rt/pure/__release
  i32.const 1568
  call $~lib/rt/pure/__release
  i32.const 13344
  call $~lib/rt/pure/__release
 )
 (func $start:assembly/lib/__tests__/vectors.spec~anonymous|0~anonymous|0
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  i32.const 1568
  call $assembly/lib/__tests__/helpers/parseHexString
  local.tee $14
  call $assembly/lib/candid/decode/Decoder#constructor
  local.set $9
  i32.const 3
  i32.const 2
  i32.const 12
  i32.const 2192
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $10
  i32.const 16
  i32.const 12
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  i32.const 0
  i32.const 0
  call $~lib/rt/pure/__new
  local.tee $0
  i32.const 0
  call $~lib/memory/memory.fill
  local.get $0
  local.tee $1
  local.get $2
  i32.load
  local.tee $3
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $3
   call $~lib/rt/pure/__release
  end
  local.get $2
  local.get $1
  i32.store
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $9
  i32.load
  call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
  i32.wrap_i64
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $4
   i32.gt_s
   if
    i32.const 0
    i32.const 14
    call $~lib/rt/pure/__new
    call $~lib/rt/pure/__retain
    call $assembly/lib/candid/idl/types/PrimitiveType#constructor
    local.get $9
    i32.load
    call $~lib/rt/pure/__retain
    local.tee $1
    local.get $1
    call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
    i32.wrap_i64
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
    local.tee $5
    i32.load
    call $~lib/string/String.UTF8.decode
    local.set $0
    local.get $5
    call $~lib/rt/pure/__release
    local.get $1
    call $~lib/rt/pure/__release
    call $~lib/rt/pure/__release
    local.get $2
    local.get $0
    call $~lib/array/Array<~lib/string/String>#push
    local.get $0
    call $~lib/rt/pure/__release
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $2
  local.tee $0
  call $~lib/rt/pure/__retain
  local.set $2
  i32.const 8
  i32.const 13
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $4
  i32.const 0
  i32.store
  local.get $4
  i32.const 0
  i32.store offset=4
  local.get $2
  call $~lib/rt/pure/__retain
  local.tee $3
  local.tee $1
  local.get $4
  i32.load offset=4
  local.tee $6
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $6
   call $~lib/rt/pure/__release
  end
  local.get $4
  local.get $1
  i32.store offset=4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  local.get $10
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<~lib/string/String>>#toStrictEqual
  i32.const 1
  i32.const 2
  i32.const 19
  i32.const 0
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.tee $6
  i32.load offset=4
  i32.const 0
  i32.const 14
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  call $assembly/lib/candid/idl/types/PrimitiveType#constructor
  local.tee $15
  call $assembly/lib/candid/idl/types/Vec
  i32.store
  local.get $6
  call $assembly/lib/candid/encode/Encoder#constructor
  local.set $2
  local.get $10
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $2
  local.get $2
  i32.load8_u offset=4
  i32.const 1
  i32.add
  i32.store8 offset=4
  i32.const 0
  local.set $1
  local.get $5
  call $~lib/rt/pure/__retain
  local.set $7
  call $assembly/lib/candid/recordRegistry/RecordRegistery.getInstance
  local.get $7
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $2
  i32.load offset=8
  local.get $3
  i32.load offset=12
  i64.extend_i32_s
  call $assembly/lib/utils/LEB128/EncodeLEB128Unsigned
  local.tee $12
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  call $~lib/rt/pure/__release
  loop $for-loop|00
   local.get $1
   local.get $3
   i32.load offset=12
   i32.lt_s
   if
    local.get $3
    local.get $1
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $13
    call $~lib/rt/pure/__retain
    local.set $8
    call $assembly/lib/candid/recordRegistry/RecordRegistery.getInstance
    i32.const 0
    i32.const 14
    call $~lib/rt/pure/__new
    call $~lib/rt/pure/__retain
    call $assembly/lib/candid/idl/types/PrimitiveType#constructor
    local.set $17
    local.get $2
    i32.load offset=8
    local.get $8
    call $assembly/lib/candid/idl/types/TextClass#encodeValue<~lib/string/String>
    local.tee $18
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
    call $~lib/rt/pure/__release
    local.get $18
    call $~lib/rt/pure/__release
    local.get $8
    call $~lib/rt/pure/__release
    call $~lib/rt/pure/__release
    local.get $17
    call $~lib/rt/pure/__release
    local.get $13
    call $~lib/rt/pure/__release
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|00
   end
  end
  local.get $12
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $2
  call $assembly/lib/candid/encode/Encoder#build
  local.tee $7
  call $assembly/lib/utils/helpers/Uint8ArrayToString
  local.tee $8
  call $~lib/string/String#toLowerCase
  local.tee $11
  call $~lib/rt/pure/__retain
  local.set $5
  i32.const 8
  i32.const 23
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $5
  call $~lib/rt/pure/__retain
  local.tee $12
  local.tee $3
  local.get $1
  i32.load offset=4
  local.tee $13
  i32.ne
  if
   local.get $3
   call $~lib/rt/pure/__retain
   local.set $3
   local.get $13
   call $~lib/rt/pure/__release
  end
  local.get $1
  local.get $3
  i32.store offset=4
  local.get $12
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  local.get $0
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $~lib/array/Array<bool>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 0
  call $~lib/array/ensureSize
  local.get $2
  local.get $0
  i32.load offset=4
  i32.add
  local.get $1
  i32.store8
  local.get $0
  local.get $3
  i32.store offset=12
 )
 (func $assembly/lib/candid/decode/Decoder#decode<~lib/array/Array<bool>> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 16
  i32.const 29
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $5
  i32.const 0
  i32.store
  local.get $5
  i32.const 0
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.store offset=8
  local.get $5
  i32.const 0
  i32.store offset=12
  i32.const 0
  i32.const 0
  call $~lib/rt/pure/__new
  local.tee $2
  i32.const 0
  call $~lib/memory/memory.fill
  local.get $2
  local.set $1
  local.get $2
  local.get $5
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $5
  local.get $1
  i32.store
  local.get $5
  local.get $2
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.store offset=8
  local.get $5
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.load
  call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
  i32.wrap_i64
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.gt_s
   if
    local.get $0
    i32.load
    i32.const 1
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
    local.tee $1
    i32.const 0
    call $~lib/typedarray/Uint8Array#__get
    i32.const 0
    i32.ne
    local.set $4
    local.get $1
    call $~lib/rt/pure/__release
    local.get $5
    local.get $4
    call $~lib/array/Array<bool>#push
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $5
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<bool>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $3
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.load offset=12
  local.tee $3
  local.set $7
  local.get $3
  i32.const 1
  i32.and
  i32.eqz
  i32.const 2352
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  block $folding-inner1
   loop $for-loop|0
    local.get $4
    local.get $7
    i32.lt_s
    if
     local.get $0
     local.get $1
     local.get $2
     local.get $4
     call $~lib/array/Array<usize>#__uget
     local.get $2
     local.get $4
     i32.const 1
     i32.add
     call $~lib/array/Array<usize>#__uget
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
     br_if $folding-inner1
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $5
   i32.load offset=12
   local.set $3
   i32.const 0
   local.set $4
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.gt_s
    if
     local.get $0
     local.get $1
     local.get $5
     local.get $4
     call $~lib/array/Array<usize>#__uget
     local.get $5
     local.get $4
     i32.const 1
     i32.add
     call $~lib/array/Array<usize>#__uget
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
     if
      local.get $0
      call $~lib/rt/pure/__release
      local.get $1
      call $~lib/rt/pure/__release
      local.get $5
      call $~lib/rt/pure/__release
      local.get $2
      call $~lib/rt/pure/__release
      i32.const 2
      return
     end
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   block $folding-inner0
    local.get $0
    i32.load offset=12
    local.tee $7
    local.get $1
    i32.load offset=12
    i32.ne
    br_if $folding-inner0
    loop $for-loop|2
     local.get $6
     local.get $7
     i32.lt_s
     if
      local.get $6
      local.get $0
      i32.load offset=4
      i32.add
      i32.load8_u
      local.set $8
      local.get $6
      local.get $1
      i32.load offset=4
      i32.add
      i32.load8_u
      local.set $9
      block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<bool> (result i32)
       local.get $5
       call $~lib/rt/pure/__retain
       local.set $3
       local.get $2
       call $~lib/rt/pure/__retain
       local.set $4
       local.get $8
       i32.const 0
       i32.ne
       local.get $9
       i32.const 0
       i32.ne
       i32.eq
       if
        local.get $3
        call $~lib/rt/pure/__release
        local.get $4
        call $~lib/rt/pure/__release
        i32.const 1
        br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<bool>
       end
       local.get $3
       call $~lib/rt/pure/__release
       local.get $4
       call $~lib/rt/pure/__release
       i32.const 0
      end
      i32.eqz
      br_if $folding-inner0
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|2
     end
    end
    local.get $2
    local.get $0
    call $~lib/array/Array<i32>#push
    local.get $2
    local.get $1
    call $~lib/array/Array<i32>#push
    br $folding-inner1
   end
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   i32.const 0
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  i32.const 1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<bool>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  block $folding-inner0
   local.get $0
   i32.eqz
   if
    i32.const 1
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 4
    i32.const 1
    i32.const 29
    i32.const 14080
    i32.const 0
    i32.const 0
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.set $2
    br $folding-inner0
   end
   local.get $1
   local.get $0
   call $~lib/map/Map<usize,i32>#has
   if
    local.get $1
    local.get $0
    call $~lib/map/Map<usize,i32>#get
    local.set $2
    br $folding-inner0
   end
   local.get $0
   i32.load offset=12
   local.tee $3
   local.set $5
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   local.get $0
   i32.const 0
   local.get $3
   i32.const 10
   i32.const 29
   i32.const 14080
   i32.const 0
   i32.const 1
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.tee $3
   call $~lib/map/Map<usize,i32>#set
   call $~lib/rt/pure/__release
   loop $for-loop|0
    local.get $2
    local.get $5
    i32.lt_s
    if
     local.get $2
     local.get $0
     i32.load offset=4
     i32.add
     i32.load8_u
     local.set $4
     local.get $1
     call $~lib/rt/pure/__retain
     i32.const 0
     i32.const 1
     i32.const 9
     i32.const 14128
     local.get $4
     f64.convert_i32_u
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
     local.set $4
     call $~lib/rt/pure/__release
     local.get $3
     local.get $4
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $3
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<bool>>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $2
   local.set $1
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<bool>>
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<bool>>#toStrictEqual (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $0
  i32.load offset=4
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 14016
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $7
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 14048
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $8
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $7
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $8
  call $~lib/rt/pure/__retain
  local.set $5
  block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<bool>>
   local.get $2
   local.get $3
   i32.eq
   if
    local.get $3
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 1
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<bool>>
   end
   local.get $3
   i32.eqz
   local.get $2
   i32.eqz
   i32.xor
   if
    local.get $3
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 0
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<bool>>
   end
   local.get $3
   local.get $2
   local.get $4
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<bool>>
   local.set $1
   local.get $3
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
  end
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $1
  i32.const 1
  i32.eq
  local.get $0
  i32.load offset=4
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<bool>>@varargs
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<bool>>@varargs
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $2
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  i32.load
  i32.xor
  i32.const 13856
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
  local.get $6
  call $~lib/rt/pure/__release
  i32.const 13856
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/typedarray/Uint8Array> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $2
  i32.const 8
  i32.const 32
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $2
  call $~lib/rt/pure/__retain
  local.tee $3
  local.tee $1
  local.get $0
  i32.load offset=4
  local.tee $4
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<u8> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $3
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $0
  i32.const 255
  i32.and
  local.get $1
  i32.const 255
  i32.and
  i32.eq
  if
   local.get $2
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   i32.const 1
   return
  end
  local.get $2
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  i32.const 0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $3
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.load offset=12
  local.tee $3
  local.set $7
  local.get $3
  i32.const 1
  i32.and
  i32.eqz
  i32.const 2352
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  block $folding-inner1
   loop $for-loop|0
    local.get $4
    local.get $7
    i32.lt_s
    if
     local.get $0
     local.get $1
     local.get $2
     local.get $4
     call $~lib/array/Array<usize>#__uget
     local.get $2
     local.get $4
     i32.const 1
     i32.add
     call $~lib/array/Array<usize>#__uget
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
     br_if $folding-inner1
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $5
   i32.load offset=12
   local.set $3
   i32.const 0
   local.set $4
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.gt_s
    if
     local.get $0
     local.get $1
     local.get $5
     local.get $4
     call $~lib/array/Array<usize>#__uget
     local.get $5
     local.get $4
     i32.const 1
     i32.add
     call $~lib/array/Array<usize>#__uget
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
     if
      local.get $0
      call $~lib/rt/pure/__release
      local.get $1
      call $~lib/rt/pure/__release
      local.get $5
      call $~lib/rt/pure/__release
      local.get $2
      call $~lib/rt/pure/__release
      i32.const 2
      return
     end
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   block $folding-inner0
    local.get $0
    i32.load offset=8
    local.tee $3
    local.get $1
    i32.load offset=8
    i32.ne
    br_if $folding-inner0
    loop $for-loop|2
     local.get $3
     local.get $6
     i32.gt_s
     if
      local.get $6
      local.get $0
      i32.load offset=4
      i32.add
      i32.load8_u
      local.get $6
      local.get $1
      i32.load offset=4
      i32.add
      i32.load8_u
      local.get $5
      local.get $2
      call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<u8>
      i32.eqz
      br_if $folding-inner0
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|2
     end
    end
    local.get $2
    local.get $0
    call $~lib/array/Array<i32>#push
    local.get $2
    local.get $1
    call $~lib/array/Array<i32>#push
    br $folding-inner1
   end
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   i32.const 0
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  i32.const 1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u8> (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  call $~lib/rt/pure/__retain
  i32.const 0
  i32.const 1
  i32.const 7
  i32.const 14416
  local.get $0
  f64.convert_i32_u
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
  local.set $0
  call $~lib/rt/pure/__release
  local.get $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  block $folding-inner0
   local.get $0
   i32.eqz
   if
    i32.const 1
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 4
    i32.const 1
    i32.const 7
    i32.const 14368
    i32.const 0
    i32.const 0
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.set $2
    br $folding-inner0
   end
   local.get $1
   local.get $0
   call $~lib/map/Map<usize,i32>#has
   if
    local.get $1
    local.get $0
    call $~lib/map/Map<usize,i32>#get
    local.set $2
    br $folding-inner0
   end
   local.get $0
   i32.load offset=8
   local.tee $3
   local.set $4
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   local.get $0
   i32.const 0
   local.get $3
   i32.const 11
   i32.const 7
   i32.const 14368
   i32.const 0
   i32.const 1
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.tee $3
   call $~lib/map/Map<usize,i32>#set
   call $~lib/rt/pure/__release
   loop $for-loop|0
    local.get $2
    local.get $4
    i32.lt_s
    if
     local.get $3
     local.get $2
     local.get $0
     i32.load offset=4
     i32.add
     i32.load8_u
     local.get $1
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u8>
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $3
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/typedarray/Uint8Array>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $2
   local.set $1
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/typedarray/Uint8Array>
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Uint8Array>#toStrictEqual (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $0
  i32.load offset=4
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 14304
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $8
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 14336
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $9
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $8
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $9
  call $~lib/rt/pure/__retain
  local.set $5
  block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/typedarray/Uint8Array>
   local.get $2
   local.get $3
   i32.eq
   if
    local.get $2
    call $~lib/rt/pure/__release
    local.get $3
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 1
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/typedarray/Uint8Array>
   end
   local.get $2
   i32.eqz
   local.get $3
   i32.eqz
   i32.xor
   if
    local.get $2
    call $~lib/rt/pure/__release
    local.get $3
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 0
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/typedarray/Uint8Array>
   end
   local.get $2
   local.get $3
   local.get $4
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/typedarray/Uint8Array>
   local.set $1
   local.get $2
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
  end
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $1
  i32.const 1
  i32.eq
  local.get $0
  i32.load offset=4
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/typedarray/Uint8Array>@varargs
  local.tee $3
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/typedarray/Uint8Array>@varargs
  local.tee $3
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $3
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  i32.load
  i32.xor
  local.get $7
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
  local.get $6
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
 )
 (func $start:assembly/lib/__tests__/vectors.spec~anonymous|0~anonymous|1
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  i32.const 13744
  call $assembly/lib/__tests__/helpers/parseHexString
  local.tee $8
  call $assembly/lib/candid/decode/Decoder#constructor
  local.set $9
  i32.const 5
  i32.const 0
  i32.const 29
  i32.const 13824
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $9
  call $assembly/lib/candid/decode/Decoder#decode<~lib/array/Array<bool>>
  local.tee $14
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 8
  i32.const 30
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $1
  call $~lib/rt/pure/__retain
  local.tee $3
  local.tee $4
  local.get $2
  i32.load offset=4
  local.tee $0
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   local.set $4
   local.get $0
   call $~lib/rt/pure/__release
  end
  local.get $2
  local.get $4
  i32.store offset=4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  local.get $7
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<bool>>#toStrictEqual
  i32.const 1
  i32.const 2
  i32.const 19
  i32.const 0
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.tee $10
  i32.load offset=4
  i32.const 0
  i32.const 31
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  call $assembly/lib/candid/idl/types/PrimitiveType#constructor
  local.tee $15
  call $assembly/lib/candid/idl/types/Vec
  i32.store
  local.get $10
  call $assembly/lib/candid/encode/Encoder#constructor
  local.set $0
  local.get $7
  call $~lib/rt/pure/__retain
  local.set $11
  local.get $0
  local.get $0
  i32.load8_u offset=4
  i32.const 1
  i32.add
  i32.store8 offset=4
  local.get $11
  call $~lib/rt/pure/__retain
  local.set $12
  call $assembly/lib/candid/recordRegistry/RecordRegistery.getInstance
  local.get $12
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $0
  i32.load offset=8
  local.get $6
  i32.load offset=12
  i64.extend_i32_s
  call $assembly/lib/utils/LEB128/EncodeLEB128Unsigned
  local.tee $17
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  call $~lib/rt/pure/__release
  loop $for-loop|0
   local.get $5
   local.get $6
   i32.load offset=12
   i32.lt_s
   if
    local.get $6
    local.get $5
    call $~lib/array/Array<u8>#__get
    local.set $4
    call $assembly/lib/candid/recordRegistry/RecordRegistery.getInstance
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.const 0
    i32.const 3
    i32.const 0
    call $~lib/rt/__newArray
    call $~lib/rt/pure/__retain
    local.tee $13
    i32.load offset=4
    local.get $4
    i32.eqz
    i32.eqz
    i32.store8
    local.get $13
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
    local.get $13
    call $~lib/rt/pure/__release
    call $~lib/rt/pure/__release
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $17
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $0
  call $assembly/lib/candid/encode/Encoder#build
  local.tee $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/typedarray/Uint8Array>
  local.tee $3
  local.get $8
  i32.const 14160
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Uint8Array>#toStrictEqual
  local.get $14
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/candid/idl/types/getIntegerIDLValueType<u8> (result i32)
  (local $0 i32)
  i32.const 1
  i32.const 34
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $0
  i32.const 0
  i32.store8
  local.get $0
  call $assembly/lib/candid/idl/types/PrimitiveType#constructor
  local.tee $0
  i32.const 8
  i32.store8
  local.get $0
 )
 (func $assembly/lib/candid/decode/Decoder#decode<~lib/array/Array<u8>> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 16
  i32.const 3
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  i32.const 0
  i32.const 0
  call $~lib/rt/pure/__new
  local.tee $1
  i32.const 0
  call $~lib/memory/memory.fill
  local.get $1
  local.set $2
  local.get $1
  local.get $3
  i32.load
  local.tee $4
  i32.ne
  if
   local.get $2
   call $~lib/rt/pure/__retain
   local.set $2
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $3
  local.get $2
  i32.store
  local.get $3
  local.get $1
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.load
  call $assembly/lib/utils/LEB128/DecodeLEB128Unsigned
  i32.wrap_i64
  local.set $7
  loop $for-loop|0
   local.get $6
   local.get $7
   i32.lt_s
   if
    call $assembly/lib/candid/idl/types/getIntegerIDLValueType<u8>
    local.tee $2
    local.set $5
    local.get $0
    i32.load
    local.set $1
    block $__inlined_func$assembly/lib/candid/idl/types/Type#decodeValue<u8>@virtual
     block $default
      block $case2
       block $case1
        local.get $2
        i32.const 8
        i32.sub
        i32.load
        local.tee $4
        i32.const 14
        i32.ne
        if
         local.get $4
         i32.const 31
         i32.eq
         br_if $case1
         local.get $4
         i32.const 34
         i32.eq
         br_if $case2
         br $default
        end
        i32.const 0
        local.set $1
        br $__inlined_func$assembly/lib/candid/idl/types/Type#decodeValue<u8>@virtual
       end
       local.get $1
       call $~lib/rt/pure/__retain
       local.tee $4
       i32.const 1
       call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
       local.tee $5
       i32.const 0
       call $~lib/typedarray/Uint8Array#__get
       i32.const 0
       i32.ne
       local.set $1
       local.get $5
       call $~lib/rt/pure/__release
       local.get $4
       call $~lib/rt/pure/__release
       br $__inlined_func$assembly/lib/candid/idl/types/Type#decodeValue<u8>@virtual
      end
      local.get $5
      local.get $1
      call $assembly/lib/candid/idl/types/FixedNatClass#decodeValue<u8>
      local.set $1
      br $__inlined_func$assembly/lib/candid/idl/types/Type#decodeValue<u8>@virtual
     end
     local.get $1
     call $~lib/rt/pure/__retain
     drop
     i32.const 14704
     i32.const 14768
     i32.const 62
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    call $~lib/rt/pure/__release
    local.get $3
    local.get $1
    call $~lib/array/Array<bool>#push
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<u8>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $2
  call $~lib/rt/pure/__retain
  local.set $5
  local.get $3
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.load offset=12
  local.tee $3
  local.set $7
  local.get $3
  i32.const 1
  i32.and
  i32.eqz
  i32.const 2352
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  block $folding-inner1
   loop $for-loop|0
    local.get $4
    local.get $7
    i32.lt_s
    if
     local.get $0
     local.get $1
     local.get $2
     local.get $4
     call $~lib/array/Array<usize>#__uget
     local.get $2
     local.get $4
     i32.const 1
     i32.add
     call $~lib/array/Array<usize>#__uget
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
     br_if $folding-inner1
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $5
   i32.load offset=12
   local.set $3
   i32.const 0
   local.set $4
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.gt_s
    if
     local.get $0
     local.get $1
     local.get $5
     local.get $4
     call $~lib/array/Array<usize>#__uget
     local.get $5
     local.get $4
     i32.const 1
     i32.add
     call $~lib/array/Array<usize>#__uget
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
     if
      local.get $0
      call $~lib/rt/pure/__release
      local.get $1
      call $~lib/rt/pure/__release
      local.get $5
      call $~lib/rt/pure/__release
      local.get $2
      call $~lib/rt/pure/__release
      i32.const 2
      return
     end
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   block $folding-inner0
    local.get $0
    i32.load offset=12
    local.tee $3
    local.get $1
    i32.load offset=12
    i32.ne
    br_if $folding-inner0
    loop $for-loop|2
     local.get $3
     local.get $6
     i32.gt_s
     if
      local.get $6
      local.get $0
      i32.load offset=4
      i32.add
      i32.load8_u
      local.get $6
      local.get $1
      i32.load offset=4
      i32.add
      i32.load8_u
      local.get $5
      local.get $2
      call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<u8>
      i32.eqz
      br_if $folding-inner0
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|2
     end
    end
    local.get $2
    local.get $0
    call $~lib/array/Array<i32>#push
    local.get $2
    local.get $1
    call $~lib/array/Array<i32>#push
    br $folding-inner1
   end
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   i32.const 0
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $5
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  i32.const 1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<u8>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  block $folding-inner0
   local.get $0
   i32.eqz
   if
    i32.const 1
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 0
    i32.const 4
    i32.const 1
    i32.const 3
    i32.const 15056
    i32.const 0
    i32.const 0
    i32.const 1
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
    local.set $2
    br $folding-inner0
   end
   local.get $1
   local.get $0
   call $~lib/map/Map<usize,i32>#has
   if
    local.get $1
    local.get $0
    call $~lib/map/Map<usize,i32>#get
    local.set $2
    br $folding-inner0
   end
   local.get $0
   i32.load offset=12
   local.tee $3
   local.set $4
   local.get $1
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   local.get $0
   i32.const 0
   local.get $3
   i32.const 10
   i32.const 3
   i32.const 15056
   i32.const 0
   i32.const 1
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.tee $3
   call $~lib/map/Map<usize,i32>#set
   call $~lib/rt/pure/__release
   loop $for-loop|0
    local.get $2
    local.get $4
    i32.lt_s
    if
     local.get $3
     local.get $2
     local.get $0
     i32.load offset=4
     i32.add
     i32.load8_u
     local.get $1
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u8>
     call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   local.get $0
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $3
   return
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<u8>>@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $2
   local.set $1
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<u8>>
  local.get $2
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<u8>>#toStrictEqual (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $0
  i32.load offset=4
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 14992
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $7
  i32.const 0
  i32.const 2
  i32.const 10
  i32.const 15024
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $8
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $2
  local.get $7
  call $~lib/rt/pure/__retain
  local.set $4
  local.get $8
  call $~lib/rt/pure/__retain
  local.set $5
  block $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<u8>>
   local.get $2
   local.get $3
   i32.eq
   if
    local.get $3
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 1
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<u8>>
   end
   local.get $3
   i32.eqz
   local.get $2
   i32.eqz
   i32.xor
   if
    local.get $3
    call $~lib/rt/pure/__release
    local.get $2
    call $~lib/rt/pure/__release
    local.get $4
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    i32.const 0
    local.set $1
    br $__inlined_func$node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/array/Array<u8>>
   end
   local.get $3
   local.get $2
   local.get $4
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/array/Array<u8>>
   local.set $1
   local.get $3
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
  end
  local.get $7
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $1
  i32.const 1
  i32.eq
  local.get $0
  i32.load offset=4
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<u8>>@varargs
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 1
  global.set $~argumentsLength
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/array/Array<u8>>@varargs
  local.tee $2
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
  local.get $2
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
  local.get $1
  call $~lib/rt/pure/__release
  local.get $0
  i32.load
  i32.xor
  i32.const 14864
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
  local.get $6
  call $~lib/rt/pure/__release
  i32.const 14864
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/candid/encode/Encoder#encode<u8> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  call $assembly/lib/candid/recordRegistry/RecordRegistery.getInstance
  call $assembly/lib/candid/idl/types/getIntegerIDLValueType<u8>
  local.set $3
  local.get $0
  i32.load offset=8
  block $__inlined_func$assembly/lib/candid/idl/types/Type#encodeValue<u8>@virtual
   local.get $3
   i32.const 8
   i32.sub
   i32.load
   local.tee $0
   i32.const 14
   i32.eq
   local.get $0
   i32.const 31
   i32.eq
   i32.or
   i32.eqz
   if
    local.get $0
    i32.const 34
    i32.eq
    if
     local.get $3
     i32.load8_s
     i32.const 64
     i32.eq
     if
      i32.const 0
      global.set $~argumentsLength
      call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
      local.set $0
      i32.const 12
      i32.const 35
      call $~lib/rt/pure/__new
      call $~lib/rt/pure/__retain
      i32.const 1
      i32.const 3
      call $~lib/arraybuffer/ArrayBufferView#constructor
      local.get $1
      i32.const 255
      i32.and
      i64.extend_i32_u
      local.set $6
      local.tee $1
      i32.load offset=8
      i32.const 3
      i32.shr_u
      i32.eqz
      if
       i32.const 1808
       i32.const 1872
       i32.const 1059
       i32.const 64
       call $~lib/builtins/abort
       unreachable
      end
      local.get $1
      i32.load offset=4
      local.get $6
      i64.store
      local.get $0
      local.get $1
      i32.load
      call $assembly/lib/utils/pipeBuffer/PipeBuffer#writeArrayBuffer
      local.get $1
      call $~lib/rt/pure/__release
     else
      local.get $1
      i32.const 255
      i32.and
      i64.extend_i32_u
      local.get $3
      i32.load8_s
      i32.const 8
      i32.div_s
      call $assembly/lib/utils/LEB128/writeIntLE
      local.set $0
     end
     br $__inlined_func$assembly/lib/candid/idl/types/Type#encodeValue<u8>@virtual
    end
    i32.const 14704
    i32.const 14768
    i32.const 65
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $~argumentsLength
   call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
   local.set $0
  end
  local.get $0
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $start:assembly/lib/__tests__/vectors.spec~anonymous|0~anonymous|2
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 14576
  call $assembly/lib/__tests__/helpers/parseHexString
  local.tee $8
  call $assembly/lib/candid/decode/Decoder#constructor
  local.set $9
  i32.const 9
  i32.const 0
  i32.const 3
  i32.const 14672
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.set $7
  local.get $9
  call $assembly/lib/candid/decode/Decoder#decode<~lib/array/Array<u8>>
  local.tee $13
  call $~lib/rt/pure/__retain
  local.set $1
  i32.const 8
  i32.const 33
  call $~lib/rt/pure/__new
  call $~lib/rt/pure/__retain
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $1
  call $~lib/rt/pure/__retain
  local.tee $3
  local.tee $4
  local.get $2
  i32.load offset=4
  local.tee $0
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   local.set $4
   local.get $0
   call $~lib/rt/pure/__release
  end
  local.get $2
  local.get $4
  i32.store offset=4
  local.get $3
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $2
  local.get $7
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<u8>>#toStrictEqual
  i32.const 1
  i32.const 2
  i32.const 19
  i32.const 0
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.tee $10
  i32.load offset=4
  call $assembly/lib/candid/idl/types/getIntegerIDLValueType<u8>
  local.tee $4
  call $assembly/lib/candid/idl/types/Vec
  i32.store
  local.get $10
  call $assembly/lib/candid/encode/Encoder#constructor
  local.set $0
  local.get $7
  call $~lib/rt/pure/__retain
  local.set $11
  local.get $0
  local.get $0
  i32.load8_u offset=4
  i32.const 1
  i32.add
  i32.store8 offset=4
  local.get $11
  call $~lib/rt/pure/__retain
  local.set $12
  call $assembly/lib/candid/recordRegistry/RecordRegistery.getInstance
  local.get $12
  call $~lib/rt/pure/__retain
  local.set $6
  local.get $0
  i32.load offset=8
  local.get $6
  i32.load offset=12
  i64.extend_i32_s
  call $assembly/lib/utils/LEB128/EncodeLEB128Unsigned
  local.tee $3
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
  call $~lib/rt/pure/__release
  loop $for-loop|0
   local.get $5
   local.get $6
   i32.load offset=12
   i32.lt_s
   if
    local.get $0
    local.get $6
    local.get $5
    call $~lib/array/Array<u8>#__get
    call $assembly/lib/candid/encode/Encoder#encode<u8>
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $3
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  call $~lib/rt/pure/__release
  local.get $6
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $0
  call $assembly/lib/candid/encode/Encoder#build
  local.tee $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/typedarray/Uint8Array>
  local.tee $3
  local.get $8
  i32.const 15104
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Uint8Array>#toStrictEqual
  local.get $13
  call $~lib/rt/pure/__release
  local.get $2
  call $~lib/rt/pure/__release
  local.get $4
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $1
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
  local.get $8
  call $~lib/rt/pure/__release
  local.get $9
  call $~lib/rt/pure/__release
  local.get $7
  call $~lib/rt/pure/__release
  local.get $0
  call $~lib/rt/pure/__release
 )
 (func $start:assembly/lib/__tests__/vectors.spec~anonymous|0
  i32.const 1456
  i32.const 13616
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 13648
  i32.const 14448
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 14480
  i32.const 15232
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
 )
 (func $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/call/__call (param $0 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  i32.const 0
  global.set $~argumentsLength
  local.get $0
  i32.load
  call_indirect (type $none_=>_none)
  local.get $0
  call $~lib/rt/pure/__release
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs (param $0 i32)
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/RTrace/__getUsizeArrayId (result i32)
  i32.const 10
 )
 (func $~start
  global.get $~started
  if
   return
  else
   i32.const 1
   global.set $~started
  end
  i32.const 1360
  i32.const 15264
  call $node_modules/@as-pect/assembly/assembly/internal/Test/describe
 )
 (func $~lib/rt/pure/decrement (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 268435455
  i32.and
  local.set $1
  local.get $0
  i32.load
  i32.const 1
  i32.and
  if
   i32.const 0
   i32.const 1120
   i32.const 122
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.add
   call $~lib/rt/__visit_members
   local.get $2
   i32.const -2147483648
   i32.and
   if
    i32.const 0
    i32.const 1120
    i32.const 126
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $0
   call $~lib/rt/tlsf/freeBlock
  else
   local.get $1
   i32.eqz
   if
    i32.const 0
    i32.const 1120
    i32.const 136
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.sub
   local.get $2
   i32.const -268435456
   i32.and
   i32.or
   i32.store offset=4
  end
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.eqz
  if
   i32.const 3216
   return
  end
  i32.const 0
  local.get $0
  i32.sub
  local.get $0
  local.get $0
  i32.const 31
  i32.shr_u
  local.tee $2
  select
  local.tee $1
  i32.const 10
  i32.ge_u
  i32.const 1
  i32.add
  local.get $1
  i32.const 10000
  i32.ge_u
  i32.const 3
  i32.add
  local.get $1
  i32.const 1000
  i32.ge_u
  i32.add
  local.get $1
  i32.const 100
  i32.lt_u
  select
  local.get $1
  i32.const 1000000
  i32.ge_u
  i32.const 6
  i32.add
  local.get $1
  i32.const 1000000000
  i32.ge_u
  i32.const 8
  i32.add
  local.get $1
  i32.const 100000000
  i32.ge_u
  i32.add
  local.get $1
  i32.const 10000000
  i32.lt_u
  select
  local.get $1
  i32.const 100000
  i32.lt_u
  select
  local.get $2
  i32.add
  local.tee $0
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/pure/__new
  local.tee $3
  local.set $4
  loop $do-continue|0
   local.get $4
   local.get $0
   i32.const 1
   i32.sub
   local.tee $0
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 10
   i32.rem_u
   i32.const 48
   i32.add
   i32.store16
   local.get $1
   i32.const 10
   i32.div_u
   local.tee $1
   br_if $do-continue|0
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  local.get $3
  call $~lib/rt/pure/__retain
 )
 (func $assembly/lib/candid/idl/types/Type#get:name@virtual (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case3
    block $case2
     block $case1
      local.get $0
      i32.const 8
      i32.sub
      i32.load
      local.tee $1
      i32.const 21
      i32.ne
      if
       local.get $1
       i32.const 14
       i32.eq
       br_if $case1
       local.get $1
       i32.const 31
       i32.eq
       br_if $case2
       local.get $1
       i32.const 34
       i32.eq
       br_if $case3
       br $default
      end
      i32.const 15328
      local.get $0
      i32.load
      call $assembly/lib/candid/idl/types/Type#get:name@virtual
      local.tee $0
      call $~lib/string/String.__concat
      local.get $0
      call $~lib/rt/pure/__release
      return
     end
     i32.const 15360
     return
    end
    i32.const 14128
    return
   end
   i32.const 15392
   local.get $0
   i32.load8_s
   call $~lib/util/number/itoa32
   local.tee $0
   call $~lib/string/String.__concat
   local.get $0
   call $~lib/rt/pure/__release
   return
  end
  i32.const 1776
 )
 (func $~lib/util/hash/hashStr (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/pure/__retain
  local.set $0
  i32.const -2128831035
  local.set $1
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.set $3
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_u
    if
     local.get $1
     local.get $0
     local.get $2
     i32.add
     i32.load8_u
     i32.xor
     i32.const 16777619
     i32.mul
     local.set $1
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
  end
  local.get $0
  call $~lib/rt/pure/__release
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,i32>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $1
  local.get $0
  i32.load
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $0
     i32.load
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     local.get $1
     call $~lib/rt/pure/__release
     local.get $0
     return
    end
    local.get $0
    i32.load offset=8
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  local.get $1
  call $~lib/rt/pure/__release
  i32.const 0
 )
 (func $~lib/map/Map<~lib/string/String,i32>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $5
  local.get $3
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $7
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $3
  local.get $0
  i32.load offset=8
  local.tee $4
  local.get $0
  i32.load offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $8
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $4
   local.get $8
   i32.ne
   if
    local.get $4
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $2
     local.get $4
     i32.load
     i32.store
     local.get $2
     local.get $4
     i32.load offset=4
     i32.store offset=4
     local.get $4
     i32.load
     call $~lib/rt/pure/__retain
     local.tee $9
     call $~lib/util/hash/hashStr
     local.set $6
     local.get $9
     call $~lib/rt/pure/__release
     local.get $2
     local.get $5
     local.get $1
     local.get $6
     i32.and
     i32.const 2
     i32.shl
     i32.add
     local.tee $6
     i32.load
     i32.store offset=8
     local.get $6
     local.get $2
     i32.store
     local.get $2
     i32.const 12
     i32.add
     local.set $2
    end
    local.get $4
    i32.const 12
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  local.get $5
  local.tee $4
  local.get $0
  i32.load
  local.tee $2
  i32.ne
  if
   local.get $4
   call $~lib/rt/pure/__retain
   local.set $4
   local.get $2
   call $~lib/rt/pure/__release
  end
  local.get $0
  local.get $4
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $3
  local.tee $1
  local.get $0
  i32.load offset=8
  local.tee $4
  i32.ne
  if
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $4
   call $~lib/rt/pure/__release
  end
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $7
  i32.store offset=12
  local.get $0
  local.get $0
  i32.load offset=20
  i32.store offset=16
  local.get $5
  call $~lib/rt/pure/__release
  local.get $3
  call $~lib/rt/pure/__release
 )
 (func $~lib/map/Map<~lib/string/String,i32>#set (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.tee $4
  call $~lib/rt/pure/__retain
  local.tee $3
  call $~lib/util/hash/hashStr
  local.set $1
  local.get $3
  call $~lib/rt/pure/__release
  local.get $0
  local.get $4
  local.get $1
  call $~lib/map/Map<~lib/string/String,i32>#find
  local.tee $3
  if
   local.get $3
   local.get $2
   i32.store offset=4
  else
   local.get $0
   i32.load offset=16
   local.get $0
   i32.load offset=12
   i32.eq
   if
    local.get $0
    local.get $0
    i32.load offset=20
    local.get $0
    i32.load offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,i32>#rehash
   end
   local.get $0
   i32.load offset=8
   call $~lib/rt/pure/__retain
   local.set $5
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $3
   i32.const 1
   i32.add
   i32.store offset=16
   local.get $5
   local.get $3
   i32.const 12
   i32.mul
   i32.add
   local.tee $3
   local.get $4
   call $~lib/rt/pure/__retain
   i32.store
   local.get $3
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   i32.store offset=20
   local.get $3
   local.get $0
   i32.load
   local.get $1
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $1
   i32.load
   i32.store offset=8
   local.get $1
   local.get $3
   i32.store
   local.get $5
   call $~lib/rt/pure/__release
  end
  local.get $0
  call $~lib/rt/pure/__retain
  local.get $4
  call $~lib/rt/pure/__release
 )
 (func $assembly/lib/candid/idl/types/Type#buildTypeTable@virtual (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  i32.const 21
  i32.eq
  if
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $0
   i32.load
   local.get $1
   call $assembly/lib/candid/idl/types/Type#buildTypeTable@virtual
   i32.const 0
   global.set $~argumentsLength
   call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
   local.tee $2
   i32.const 1
   i32.const 0
   i32.const 3
   i32.const 15424
   call $~lib/rt/__newArray
   call $~lib/rt/pure/__retain
   local.tee $4
   call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
   local.get $2
   local.get $0
   i32.load
   local.get $1
   call $assembly/lib/candid/idl/types/Type#encodeType@virtual
   local.tee $5
   call $assembly/lib/utils/pipeBuffer/PipeBuffer#append
   call $~lib/rt/pure/__release
   local.get $0
   call $~lib/rt/pure/__retain
   local.set $0
   local.get $2
   call $~lib/rt/pure/__retain
   local.set $3
   local.get $1
   i32.load offset=4
   i32.load offset=12
   local.set $6
   local.get $1
   i32.load
   local.get $0
   call $assembly/lib/candid/idl/types/Type#get:name@virtual
   local.tee $7
   local.get $6
   call $~lib/map/Map<~lib/string/String,i32>#set
   call $~lib/rt/pure/__release
   local.get $1
   i32.load offset=4
   local.get $3
   call $~lib/array/Array<~lib/string/String>#push
   local.get $7
   call $~lib/rt/pure/__release
   local.get $0
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   local.get $4
   call $~lib/rt/pure/__release
   local.get $5
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
  end
 )
 (func $assembly/lib/utils/LEB128/EncodeLEB128Signed (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  local.set $2
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $3
  loop $while-continue|1
   local.get $2
   if
    i32.const 1
    local.get $0
    i64.const 127
    i64.and
    i32.wrap_i64
    local.tee $1
    i32.const 64
    i32.and
    i32.const 0
    i32.ne
    local.tee $2
    i32.const 0
    local.get $0
    i64.const 7
    i64.shr_s
    local.tee $0
    i64.const -1
    i64.eq
    select
    local.get $2
    i32.eqz
    i32.const 0
    local.get $0
    i64.eqz
    select
    select
    i32.eqz
    local.tee $2
    if
     local.get $1
     i32.const 128
     i32.or
     local.set $1
    end
    i32.const 1
    i32.const 0
    i32.const 3
    i32.const 0
    call $~lib/rt/__newArray
    call $~lib/rt/pure/__retain
    local.tee $4
    i32.load offset=4
    local.get $1
    i32.store8
    local.get $3
    local.get $4
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $4
    call $~lib/rt/pure/__release
    br $while-continue|1
   end
  end
  local.get $3
 )
 (func $~lib/math/NativeMath.log2 (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  (local $9 f64)
  (local $10 f64)
  i32.const 1
  local.get $0
  i64.reinterpret_f64
  local.tee $2
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.tee $1
  i32.const 31
  i32.shr_u
  local.get $1
  i32.const 1048576
  i32.lt_u
  select
  if
   local.get $2
   i64.const 1
   i64.shl
   i64.eqz
   if
    f64.const -1
    local.get $0
    local.get $0
    f64.mul
    f64.div
    return
   end
   local.get $1
   i32.const 31
   i32.shr_u
   if
    local.get $0
    local.get $0
    f64.sub
    f64.const 0
    f64.div
    return
   end
   i32.const -54
   local.set $8
   local.get $0
   f64.const 18014398509481984
   f64.mul
   i64.reinterpret_f64
   local.tee $2
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   local.set $1
  else
   local.get $1
   i32.const 2146435072
   i32.ge_u
   if
    local.get $0
    return
   else
    local.get $2
    i64.const 32
    i64.shl
    i64.eqz
    i32.const 0
    local.get $1
    i32.const 1072693248
    i32.eq
    select
    if
     f64.const 0
     return
    end
   end
  end
  local.get $2
  i64.const 4294967295
  i64.and
  local.get $1
  i32.const 614242
  i32.add
  local.tee $1
  i32.const 1048575
  i32.and
  i32.const 1072079006
  i32.add
  i64.extend_i32_u
  i64.const 32
  i64.shl
  i64.or
  f64.reinterpret_i64
  f64.const 1
  f64.sub
  local.tee $0
  local.get $0
  f64.const 2
  f64.add
  f64.div
  local.tee $4
  local.get $4
  f64.mul
  local.set $3
  local.get $8
  local.get $1
  i32.const 20
  i32.shr_u
  i32.const 1023
  i32.sub
  i32.add
  f64.convert_i32_s
  local.tee $9
  local.get $0
  local.get $0
  f64.const 0.5
  f64.mul
  local.get $0
  f64.mul
  local.tee $5
  f64.sub
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.tee $6
  f64.const 1.4426950407214463
  f64.mul
  local.tee $10
  f64.add
  local.set $7
  local.get $0
  local.get $6
  f64.sub
  local.get $5
  f64.sub
  local.get $4
  local.get $5
  local.get $3
  local.get $3
  local.get $3
  f64.mul
  local.tee $0
  local.get $0
  local.get $0
  f64.const 0.14798198605116586
  f64.mul
  f64.const 0.1818357216161805
  f64.add
  f64.mul
  f64.const 0.2857142874366239
  f64.add
  f64.mul
  f64.const 0.6666666666666735
  f64.add
  f64.mul
  local.get $0
  local.get $0
  local.get $0
  f64.const 0.15313837699209373
  f64.mul
  f64.const 0.22222198432149784
  f64.add
  f64.mul
  f64.const 0.3999999999940942
  f64.add
  f64.mul
  f64.add
  f64.add
  f64.mul
  f64.add
  local.tee $0
  local.get $6
  f64.add
  f64.const 1.6751713164886512e-10
  f64.mul
  local.get $0
  f64.const 1.4426950407214463
  f64.mul
  f64.add
  local.get $9
  local.get $7
  f64.sub
  local.get $10
  f64.add
  f64.add
  local.get $7
  f64.add
 )
 (func $assembly/lib/candid/idl/types/Type#encodeType@virtual (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  block $default
   block $case4
    block $case3
     block $case2
      block $case1
       local.get $0
       i32.const 8
       i32.sub
       i32.load
       local.tee $2
       i32.const 15
       i32.ne
       if
        local.get $2
        i32.const 22
        i32.eq
        local.get $2
        i32.const 21
        i32.eq
        i32.or
        br_if $case1
        local.get $2
        i32.const 14
        i32.eq
        br_if $case2
        local.get $2
        i32.const 31
        i32.eq
        br_if $case3
        local.get $2
        i32.const 34
        i32.eq
        br_if $case4
        br $default
       end
       local.get $1
       call $assembly/lib/candid/idl/types/Type#encodeType
       return
      end
      local.get $1
      call $~lib/rt/pure/__retain
      local.tee $2
      local.set $4
      local.get $0
      call $assembly/lib/candid/idl/types/Type#get:name@virtual
      local.tee $6
      call $~lib/rt/pure/__retain
      local.set $1
      local.get $2
      i32.load
      local.get $1
      call $~lib/rt/pure/__retain
      local.tee $0
      call $~lib/rt/pure/__retain
      local.tee $5
      call $~lib/util/hash/hashStr
      local.set $7
      local.get $5
      call $~lib/rt/pure/__release
      local.get $0
      local.get $7
      call $~lib/map/Map<~lib/string/String,i32>#find
      i32.const 0
      i32.ne
      local.get $0
      call $~lib/rt/pure/__release
      if
       local.get $4
       i32.load
       local.get $1
       call $~lib/rt/pure/__retain
       local.tee $4
       call $~lib/rt/pure/__retain
       local.tee $3
       call $~lib/util/hash/hashStr
       local.set $5
       local.get $3
       call $~lib/rt/pure/__release
       local.get $4
       local.get $5
       call $~lib/map/Map<~lib/string/String,i32>#find
       local.tee $0
       i32.eqz
       if
        i32.const 2720
        i32.const 2784
        i32.const 104
        i32.const 17
        call $~lib/builtins/abort
        unreachable
       end
       local.get $0
       i32.load offset=4
       local.set $0
       local.get $4
       call $~lib/rt/pure/__release
      else
       i32.const 0
       local.set $0
      end
      local.get $0
      i64.extend_i32_s
      call $assembly/lib/utils/LEB128/EncodeLEB128Signed
      local.get $1
      call $~lib/rt/pure/__release
      local.get $6
      call $~lib/rt/pure/__release
      local.get $2
      call $~lib/rt/pure/__release
      return
     end
     local.get $1
     call $~lib/rt/pure/__retain
     i64.const -15
     call $assembly/lib/utils/LEB128/EncodeLEB128Signed
     local.set $1
     call $~lib/rt/pure/__release
     local.get $1
     return
    end
    local.get $1
    call $~lib/rt/pure/__retain
    i64.const -2
    call $assembly/lib/utils/LEB128/EncodeLEB128Signed
    local.set $1
    call $~lib/rt/pure/__release
    local.get $1
    return
   end
   local.get $1
   call $~lib/rt/pure/__retain
   i64.const -2
   local.get $0
   i32.load8_s
   f64.convert_i32_s
   call $~lib/math/NativeMath.log2
   i64.trunc_f64_s
   i64.sub
   call $assembly/lib/utils/LEB128/EncodeLEB128Signed
   local.set $0
   call $~lib/rt/pure/__release
   local.get $0
   return
  end
  local.get $1
  call $assembly/lib/candid/idl/types/Type#encodeType
 )
 (func $assembly/lib/candid/idl/types/FixedNatClass#decodeValue<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  local.get $1
  call $~lib/rt/pure/__retain
  local.set $3
  local.get $0
  i32.load8_s
  i32.const 32
  i32.le_s
  if
   local.get $0
   i32.load8_s
   i32.const 8
   i32.div_s
   i32.const 0
   local.set $0
   local.get $3
   call $~lib/rt/pure/__retain
   local.tee $1
   i32.const 1
   call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
   local.tee $5
   i32.const 0
   call $~lib/typedarray/Uint8Array#__get
   i64.extend_i32_u
   local.set $6
   i32.const 1
   local.set $4
   i32.const 24
   i32.shl
   i32.const 24
   i32.shr_s
   local.set $2
   loop $while-continue|0
    local.get $0
    i32.const 1
    i32.add
    local.tee $0
    local.get $2
    i32.lt_s
    if
     local.get $6
     local.get $4
     i32.const 8
     i32.shl
     local.tee $4
     local.get $1
     i32.const 1
     call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
     local.tee $7
     i32.const 0
     call $~lib/typedarray/Uint8Array#__get
     i32.mul
     i64.extend_i32_s
     i64.add
     local.set $6
     local.get $7
     call $~lib/rt/pure/__release
     br $while-continue|0
    end
   end
   local.get $5
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
   local.get $6
   i32.wrap_i64
   local.set $0
   local.get $3
   call $~lib/rt/pure/__release
  else
   local.get $3
   local.get $0
   i32.load8_s
   i32.const 8
   i32.div_s
   i32.const 24
   i32.shl
   i32.const 24
   i32.shr_s
   call $assembly/lib/utils/pipeBuffer/PipeBuffer#read
   local.tee $4
   i32.load
   i32.const 1
   global.set $~argumentsLength
   call $~lib/rt/pure/__retain
   local.tee $2
   call $~lib/rt/pure/__retain
   local.tee $0
   i32.const 20
   i32.sub
   i32.load offset=16
   local.tee $1
   local.set $5
   local.get $1
   i32.const 7
   i32.and
   if
    i32.const 1664
    i32.const 1872
    i32.const 1746
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 12
   i32.const 35
   call $~lib/rt/pure/__new
   local.tee $1
   local.get $0
   call $~lib/rt/pure/__retain
   i32.store
   local.get $1
   local.get $5
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=4
   local.get $1
   call $~lib/rt/pure/__retain
   local.set $1
   local.get $0
   call $~lib/rt/pure/__release
   local.get $2
   call $~lib/rt/pure/__release
   local.get $1
   local.tee $0
   i32.load offset=8
   i32.const 3
   i32.shr_u
   i32.eqz
   if
    i32.const 1808
    i32.const 1872
    i32.const 1048
    i32.const 64
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   i64.load
   i32.wrap_i64
   local.set $0
   local.get $4
   call $~lib/rt/pure/__release
   local.get $3
   call $~lib/rt/pure/__release
   local.get $1
   call $~lib/rt/pure/__release
  end
  local.get $0
 )
 (func $assembly/lib/utils/LEB128/writeIntLE (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  i32.const 0
  global.set $~argumentsLength
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#constructor@varargs
  local.set $7
  i32.const 256
  local.set $6
  local.get $0
  i64.const 256
  i64.rem_s
  local.set $8
  i32.const 1
  i32.const 0
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  call $~lib/rt/pure/__retain
  local.tee $3
  i32.load offset=4
  local.get $8
  i64.store8
  local.get $7
  local.get $3
  local.tee $2
  call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
  local.get $1
  i32.const 24
  i32.shl
  i32.const 24
  i32.shr_s
  local.set $3
  loop $while-continue|0
   local.get $4
   i32.const 1
   i32.add
   local.tee $4
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $6
    i64.extend_i32_s
    i64.div_s
    i32.const 1
    local.get $5
    local.get $8
    i64.const 0
    i64.ne
    i32.const 0
    local.get $5
    i32.eqz
    i32.const 0
    local.get $0
    i64.const 0
    i64.lt_s
    select
    select
    select
    local.tee $5
    i64.extend_i32_s
    i64.sub
    i64.const 256
    i64.rem_s
    local.set $8
    i32.const 1
    i32.const 0
    i32.const 3
    i32.const 0
    call $~lib/rt/__newArray
    call $~lib/rt/pure/__retain
    local.tee $1
    i32.load offset=4
    local.get $8
    i64.store8
    local.get $7
    local.get $1
    call $assembly/lib/utils/pipeBuffer/PipeBuffer#write
    local.get $6
    i32.const 8
    i32.shl
    local.set $6
    local.get $1
    call $~lib/rt/pure/__release
    br $while-continue|0
   end
  end
  local.get $2
  call $~lib/rt/pure/__release
  local.get $7
 )
 (func $~lib/rt/pure/__visit (param $0 i32)
  local.get $0
  i32.const 15732
  i32.lt_u
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  call $~lib/rt/pure/decrement
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner3
   block $folding-inner2
    block $folding-inner1
     block $folding-inner0
      block $switch$1$default
       block $switch$1$case$30
        block $switch$1$case$29
         block $switch$1$case$27
          block $switch$1$case$26
           block $switch$1$case$20
            block $switch$1$case$19
             block $switch$1$case$8
              block $switch$1$case$2
               local.get $0
               i32.const 8
               i32.sub
               i32.load
               br_table $switch$1$case$2 $switch$1$case$2 $folding-inner2 $folding-inner0 $folding-inner2 $switch$1$case$2 $switch$1$case$8 $folding-inner2 $folding-inner2 $folding-inner2 $folding-inner0 $folding-inner0 $folding-inner1 $folding-inner3 $switch$1$case$2 $switch$1$case$2 $switch$1$case$2 $switch$1$case$19 $switch$1$case$20 $folding-inner1 $folding-inner2 $folding-inner2 $switch$1$case$2 $folding-inner3 $switch$1$case$26 $switch$1$case$27 $folding-inner1 $switch$1$case$29 $switch$1$case$30 $folding-inner0 $folding-inner3 $switch$1$case$2 $folding-inner3 $folding-inner3 $switch$1$case$2 $folding-inner2 $switch$1$default
              end
              return
             end
             local.get $0
             i32.load
             call $~lib/rt/pure/__visit
             local.get $0
             i32.load offset=8
             local.tee $2
             local.tee $1
             local.get $0
             i32.load offset=16
             i32.const 12
             i32.mul
             i32.add
             local.set $0
             loop $while-continue|0
              local.get $0
              local.get $1
              i32.gt_u
              if
               local.get $1
               i32.load offset=8
               i32.const 1
               i32.and
               i32.eqz
               if
                local.get $1
                i32.load offset=4
                call $~lib/rt/pure/__visit
               end
               local.get $1
               i32.const 12
               i32.add
               local.set $1
               br $while-continue|0
              end
             end
             local.get $2
             call $~lib/rt/pure/__visit
             return
            end
            local.get $0
            i32.load
            call $~lib/rt/pure/__visit
            local.get $0
            i32.load offset=8
            call $~lib/rt/pure/__visit
            return
           end
           local.get $0
           i32.load
           local.tee $1
           if
            local.get $1
            call $~lib/rt/pure/__visit
           end
           local.get $0
           i32.load offset=8
           local.tee $1
           if
            local.get $1
            call $~lib/rt/pure/__visit
           end
           local.get $0
           i32.load offset=12
           local.tee $1
           if
            local.get $1
            call $~lib/rt/pure/__visit
           end
           local.get $0
           i32.load offset=16
           local.tee $0
           if
            local.get $0
            call $~lib/rt/pure/__visit
           end
           return
          end
          local.get $0
          i32.load
          local.tee $1
          if
           local.get $1
           call $~lib/rt/pure/__visit
          end
          br $folding-inner3
         end
         local.get $0
         i32.load
         call $~lib/rt/pure/__visit
         local.get $0
         i32.load offset=8
         local.tee $2
         local.tee $1
         local.get $0
         i32.load offset=16
         i32.const 12
         i32.mul
         i32.add
         local.set $0
         loop $while-continue|00
          local.get $0
          local.get $1
          i32.gt_u
          if
           local.get $1
           i32.load offset=8
           i32.const 1
           i32.and
           i32.eqz
           if
            local.get $1
            i32.load
            call $~lib/rt/pure/__visit
           end
           local.get $1
           i32.const 12
           i32.add
           local.set $1
           br $while-continue|00
          end
         end
         local.get $2
         call $~lib/rt/pure/__visit
         return
        end
        return
       end
       local.get $0
       i32.load offset=4
       call $~lib/rt/pure/__visit
       return
      end
      unreachable
     end
     local.get $0
     i32.load
     call $~lib/rt/pure/__visit
     return
    end
    local.get $0
    i32.load offset=4
    local.tee $1
    local.get $0
    i32.load offset=12
    i32.const 2
    i32.shl
    i32.add
    local.set $2
    loop $while-continue|01
     local.get $1
     local.get $2
     i32.lt_u
     if
      local.get $1
      i32.load
      local.tee $3
      if
       local.get $3
       call $~lib/rt/pure/__visit
      end
      local.get $1
      i32.const 4
      i32.add
      local.set $1
      br $while-continue|01
     end
    end
    local.get $0
    i32.load
    call $~lib/rt/pure/__visit
    return
   end
   local.get $0
   i32.load
   local.tee $0
   if
    local.get $0
    call $~lib/rt/pure/__visit
   end
   return
  end
  local.get $0
  i32.load offset=4
  local.tee $0
  if
   local.get $0
   call $~lib/rt/pure/__visit
  end
 )
)
